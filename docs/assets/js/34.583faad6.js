(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{680:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"day-7-create-and-run-your-first-project"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-7-create-and-run-your-first-project"}},[t._v("#")]),t._v(" Day 7 – Create and run your first project")]),t._v(" "),s("p",[t._v("These days, most Clojurists use Leiningen to build and manage their projects.")]),t._v(" "),s("h2",{attrs:{id:"instalation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#instalation"}},[t._v("#")]),t._v(" Instalation")]),t._v(" "),s("p",[t._v("Leiningen is the easiest way to use Clojure with a focus on project automation and declarative configuration.\nTo see how to "),s("a",{attrs:{href:"https://leiningen.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("install"),s("OutboundLink")],1),t._v(" and configure Leiningen, go to the official documentation and follow the necessary steps.")]),t._v(" "),s("h2",{attrs:{id:"creating-a-new-project"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-new-project"}},[t._v("#")]),t._v(" Creating a new project")]),t._v(" "),s("p",[t._v("After the installation finishes, run to the terminal and create your first project with the command:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("lein new app my-first-clojure-app\n")])])]),s("p",[t._v("Access the directory.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" my-first-clojure-app\n")])])]),s("p",[t._v("When listing directory files, you should have output similar to this.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n├── CHANGELOG.md\n├── LICENSE\n├── README.md\n├── doc\n│   └── intro.md\n├── project.clj\n├── resources\n├── src\n│   └── my_first_clojure_app\n│       └── core.clj\n└── "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n    └── my_first_clojure_app\n        └── core_test.clj\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" directories, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" files\n")])])]),s("p",[t._v("The "),s("code",[t._v("project.clj")]),t._v(" file is the file that holds the project settings and specifies the dependencies for the project.")]),t._v(" "),s("div",{staticClass:"language-clojure extra-class"},[s("pre",{pre:!0,attrs:{class:"language-clojure"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defproject")]),t._v(" my-first-clojure-app "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1.0-SNAPSHOT"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":description")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FIXME: write description"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":url")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://example.com/FIXME"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":license")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"EPL-2.0 OR GPL-2.0-or-later WITH Classpath-exception-2.0"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":url")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://www.eclipse.org/legal/epl-2.0/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":dependencies")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("org.clojure/clojure "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.10.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":main")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(":skip-aot my-first-clojure-app.core\n  "),s("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":target-path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"target/%s"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":profiles")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":uberjar")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":aot")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("In "),s("code",[t._v("src/my_first_clojure_app/core.clj")]),t._v(" is where you will write your Clojure code for a while or until you need to separate the application into other namespaces.")]),t._v(" "),s("p",[t._v("As the name suggests, "),s("code",[t._v("tests")]),t._v(" is where you will store all test files for their respective resources.")]),t._v(" "),s("p",[t._v("And finally, "),s("code",[t._v("resources")]),t._v(" store's assets as images, etc.")]),t._v(" "),s("h2",{attrs:{id:"run-the-project"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-the-project"}},[t._v("#")]),t._v(" Run the project")]),t._v(" "),s("p",[t._v("Before running the project, open the file "),s("code",[t._v("src/my_first_clojure_app/core.clj")]),t._v(" and change the entry point of your program.")]),t._v(" "),s("div",{staticClass:"language-clojure extra-class"},[s("pre",{pre:!0,attrs:{class:"language-clojure"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ns")]),t._v(" my-first-clojure-app.core\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":gen-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defn")]),t._v(" -main\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I don\'t do a whole lot ... yet."')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("& args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("println")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is the first app in Clojure!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Then run the project with the command:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("lein run\n")])])]),s("p",[t._v("This should be the output: "),s("code",[t._v("This is the first app in Clojure!")])]),t._v(" "),s("p",[t._v("Using "),s("code",[t._v("lein run")]),t._v(" to test your development code is great and helps you save a lot of time without compiling a file.")]),t._v(" "),s("p",[t._v("But there are cases where you will need to compile your program to run on other platforms that do not have Leiningen or some production code. To compilate the project, you can simply use the following command:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("lein uberjar\n")])])]),s("p",[t._v("When you run the command, you will be presented with your Clojure program that can be run on any platform.")]),t._v(" "),s("p",[t._v("If all went well, you should have the following console output.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Created "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("./my-first-clojure-app/java "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jar")]),t._v(" target/uberjar/my-first-clojure-app-0.1.0-SNAPSHOT-standalone.jar\n")])])]),s("p",[t._v("Voce pode executar o programa gerado como faria com qualquer programa em Java.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jar")]),t._v(" target/uberjar/my-first-clojure-app-0.1.0-SNAPSHOT-standalone.ja\n")])])]),s("p",[t._v("Wow, congratulations! You now have all the basic details you need to build, run, and distribute (very) basic Clojure programs.")]),t._v(" "),s("h2",{attrs:{id:"tests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tests"}},[t._v("#")]),t._v(" Tests")]),t._v(" "),s("p",[t._v("Leiningen provides a more automated and simple way to run the tests in your application.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("lein "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n")])])]),s("p",[t._v("That will generate the following output.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("lein "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" my-first-clojure-app.core-test\n\nlein "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" :only my-first-clojure-app.core-test/a-test\n\nFAIL "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a-test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("core_test.clj:7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nFIXME, I fail.\nexpected: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  actual: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("not "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v("\n\nRan "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" tests containing "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" assertions.\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" failures, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" errors.\nTests failed.\n")])])]),s("p",[t._v("Go to the "),s("code",[t._v("test/my_first_clojure_app/core_test.clj")]),t._v(" file and change the test.")]),t._v(" "),s("div",{staticClass:"language-clojure extra-class"},[s("pre",{pre:!0,attrs:{class:"language-clojure"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deftest")]),t._v(" a-test\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testing")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Fixed! It works now."')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Now, running again for "),s("code",[t._v("lein test")]),t._v(" will get the following output.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("lein "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" my-first-clojure-app.core-test\n\nRan "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" tests containing "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" assertions.\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" failures, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" errors.\n")])])]),s("h2",{attrs:{id:"test-your-knowledge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#test-your-knowledge"}},[t._v("#")]),t._v(" Test your knowledge")]),t._v(" "),s("ul",[s("li",[t._v("Create a new app using "),s("code",[t._v("lein")]),t._v(".")]),t._v(" "),s("li",[t._v("Use o conhecimento que voce adquiriu nos dias anteriores para criar novas funcionalidades ao seu programa.")]),t._v(" "),s("li",[t._v("Compile your program with "),s("code",[t._v("lein uberjar")]),t._v(" and send it to a friend to execute.")]),t._v(" "),s("li",[t._v("Build your imagination and keep on studying.")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"license"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[t._v("#")]),t._v(" License")]),t._v(" "),s("p",[t._v("This project is licensed under the MIT License.")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://badges.mit-license.org",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"http://img.shields.io/:license-mit-black.svg?style=flat-square",alt:"License"}}),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);