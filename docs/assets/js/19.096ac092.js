(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{290:function(r,e,l){"use strict";l.r(e);var t=l(14),v=Object(t.a)({},(function(){var r=this,e=r._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("h1",{attrs:{id:"clojure-소개"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clojure-소개"}},[r._v("#")]),r._v(" Clojure 소개")]),r._v(" "),e("p",[r._v("Clojure는 리스프(Lisp) 계열의 함수형 프로그래밍 언어입니다. Rich Hickey에 의해 개발되었으며, 자바 가상 머신(JVM)에서 실행되는데, 이는 자바의 생태계와의 통합성과 성능 향상을 제공합니다.")]),r._v(" "),e("p",[r._v("Clojure는 다음과 같은 특징을 가지고 있습니다.")]),r._v(" "),e("h2",{attrs:{id:"hhkhkj"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hhkhkj"}},[r._v("#")]),r._v(" hhkhkj")]),r._v(" "),e("ul",[e("li",[r._v("함수형 프로그래밍")])]),r._v(" "),e("p",[r._v("Clojure는 함수형 프로그래밍 패러다임을 따릅니다.\n함수형 프로그래밍은 부작용(side-effect)을 최소화하여 코드의 안정성과 가독성을 높이는데 초점을 둡니다.")]),r._v(" "),e("ul",[e("li",[r._v("불변성(Immutability)")])]),r._v(" "),e("p",[r._v("Clojure에서 데이터는 불변성을 가집니다.\n데이터를 수정하는 작업은 새로운 데이터를 생성하는 것으로 이루어지며, 이를 통해 코드의 안정성과 병행성(concurrency) 문제를 해결할 수 있습니다.")]),r._v(" "),e("ul",[e("li",[r._v("매크로(Macro)")])]),r._v(" "),e("p",[r._v("Clojure는 매크로라는 기능을 제공합니다.\n매크로는 프로그램 코드를 생성하는 코드로, 코드의 재사용성과 가독성을 높이는데 효과적입니다.\n자바 통합(Java Interoperability)")]),r._v(" "),e("p",[r._v("Clojure는 자바 가상 머신에서 실행되기 때문에, 자바의 생태계와의 통합성이 높습니다.\n자바의 클래스나 메서드를 Clojure에서 호출할 수 있으며, Clojure 코드도 자바에서 호출될 수 있습니다.")]),r._v(" "),e("ul",[e("li",[r._v("REPL(Read-Eval-Print-Loop)")])]),r._v(" "),e("p",[r._v("Clojure는 REPL이라는 기능을 제공합니다.")]),r._v(" "),e("p",[r._v("REPL은 사용자의 입력을 받아서 바로 코드를 실행해 결과를 출력하는 환경으로, 빠른 피드백과 실험적인 프로그래밍을 쉽게 할 수 있도록 도와줍니다.")]),r._v(" "),e("p",[r._v("Clojure는 함수형 프로그래밍 패러다임과 불변성 데이터, 매크로, 자바 통합, REPL 등의 다양한 기능을 제공하여, 안정성과 가독성이 높은 프로그램을 쉽게 작성할 수 있습니다.")]),r._v(" "),e("p",[r._v("Clojure를 이용하면, 자바 생태계와의 통합성을 살리면서도 함수형 프로그래밍의 장점을 활용할 수 있습니다.")])])}),[],!1,null,null,null);e.default=v.exports}}]);