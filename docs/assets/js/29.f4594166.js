(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{676:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"day-2-structures"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#day-2-structures"}},[s._v("#")]),s._v(" Day 2 â€“ Structures")]),s._v(" "),t("p",[s._v("All Clojure code is written in a uniform Lisp-based and recognizes two types of structures:")]),s._v(" "),t("h2",{attrs:{id:"_1-literal-representations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-literal-representations"}},[s._v("#")]),s._v(" 1. Literal representations")]),s._v(" "),t("p",[s._v("Below are some examples of literal representations of common primitives in Clojure.")]),s._v(" "),t("h3",{attrs:{id:"numeric-types"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#numeric-types"}},[s._v("#")]),s._v(" Numeric types")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; integer")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.4")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; floating point")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("49/7")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; ratio")]),s._v("\n-"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; integer")]),s._v("\n")])])]),t("h3",{attrs:{id:"character-types"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#character-types"}},[s._v("#")]),s._v(" Character types")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; string")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("\\e")]),s._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; character")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[0-9]+"')]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; regular expression")]),s._v("\n")])])]),t("h3",{attrs:{id:"symbols-and-idents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#symbols-and-idents"}},[s._v("#")]),s._v(" Symbols and idents")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[s._v("map             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; symbol")]),s._v("\n*               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; symbol - most punctuation allowed")]),s._v("\nclojure.core/+  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; namespaced symbol")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v("             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; null value")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; booleans")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":alpha")]),s._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; keyword")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":release/alpha")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; keyword with namespace")]),s._v("\n")])])]),t("h3",{attrs:{id:"literal-collections"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#literal-collections"}},[s._v("#")]),s._v(" Literal collections")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[s._v("'"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; list")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("                     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; vector")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; set")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":b")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"world"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; map")]),s._v("\n")])])]),t("p",[s._v("You car see more in "),t("a",{attrs:{href:"https://clojure.org/guides/learn/syntax",target:"_blank",rel:"noopener noreferrer"}},[s._v("official documentation"),t("OutboundLink")],1),s._v(".")]),s._v(" "),t("h2",{attrs:{id:"_2-operations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-operations"}},[s._v("#")]),s._v(" 2. Operations")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("operator")]),s._v(" operand1 operand2 ...operandn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[s._v("Notice that there are no commas. Clojure uses whitespace to separate operands, and it treats commas as whitespace.")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> 28")]),s._v("\n")])])]),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("str")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Clojure is awesome! "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"And this is a way "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"to concatenate strings."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> "Clojure is awesome! And this is a way to concatenate strings."')]),s._v("\n")])])]),t("p",[s._v("In the first operation, the operator "),t("code",[s._v("+")]),s._v(" adds the operands 1, 2, 3, 4, 5, 6 and 7. In the second operation, the operator "),t("code",[s._v("str")]),s._v(" concatenates three strings to form a new string.")]),s._v(" "),t("h2",{attrs:{id:"numbers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#numbers"}},[s._v("#")]),s._v(" Numbers")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> 20")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> -18")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> 1040")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("/")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("135")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> 45")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> 1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("min")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> 1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("max")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> 21")]),s._v("\n")])])]),t("h2",{attrs:{id:"strings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#strings"}},[s._v("#")]),s._v(" Strings")]),s._v(" "),t("p",[s._v('Creating strings in Clojure is very simple, you only need "double quotes".')]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"I\'m a String"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> "I\'m a String"')]),s._v("\n")])])]),t("h3",{attrs:{id:"str"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#str"}},[s._v("#")]),s._v(" str")]),s._v(" "),t("p",[s._v('Clojure\'s structure is very simple and consistent by comparison facilitating string "concatenation" as already shown.')]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("str")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"I\'m "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"new!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> "I\'m new!"')]),s._v("\n")])])]),t("h3",{attrs:{id:"format"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#format"}},[s._v("#")]),s._v(" format")]),s._v(" "),t("p",[s._v("Like many other languages, Clojure supports string formatting with format "),t("code",[s._v("function")]),s._v(".")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"left"}},[s._v("Format specifier")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("Type")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("%s")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("String")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("%d")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("Integer")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("%.Nf")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("Floating numbers, where N specifies how floating points")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("%b")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("Boolean")])])])]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Welcome to %s"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Clojure!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> "Welcome to Clojure!"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This is the %dnd day of %s"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Clojure"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> "This is the 2nd day of Clojure"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Î¦: %.2f"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.61803398875")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> "Î¦: 1.62"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Î¦: %.7f"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.61803398875")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> "Î¦: 1.6180340"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"if (= 2 (+ 1 1)) returns %b"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> "if (= 2 (+ 1 1)) returns true"')]),s._v("\n")])])]),t("h2",{attrs:{id:"boolean"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[s._v("#")]),s._v(" Boolean")]),s._v(" "),t("p",[s._v("In Clojure, everything except "),t("code",[s._v("false")]),s._v(" and "),t("code",[s._v("nil")]),s._v(" are "),t("code",[s._v("true")]),s._v(".")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> false")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> false")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> true")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> true")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A simple string"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> true")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":property")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> true")]),s._v("\n")])])]),t("h2",{attrs:{id:"lists"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lists"}},[s._v("#")]),s._v(" Lists")]),s._v(" "),t("p",[s._v("A list is a simple collection of values â€‹â€‹by grouping values â€‹â€‹in parentheses with "),t("code",[s._v("'")]),s._v(" (single quote) at the beginning.")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[s._v("'"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":b")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":c")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> (:a :b :c)")]),s._v("\n\n'"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> (0 1 1 2 3)")]),s._v("\n\n'"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"days"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":clojure")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> (7 "days" :clojure)')]),s._v("\n")])])]),t("h3",{attrs:{id:"conj"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#conj"}},[s._v("#")]),s._v(" conj")]),s._v(" "),t("p",[t("code",[s._v("conj")]),s._v(" is used to add values to a list.")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("conj")]),s._v(" '"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> (0 1 1 2 3)")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("conj")]),s._v(" '"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"days"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"of"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Clojure"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":days")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> (7 :days "days" "of" "Clojure")')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("conj")]),s._v(" '"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"i"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"t"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"l"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> ("l" "i" "s" "t")')]),s._v("\n")])])]),t("p",[s._v("Note that the new value is added to the top.")]),s._v(" "),t("h3",{attrs:{id:"remove-elements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#remove-elements"}},[s._v("#")]),s._v(" remove elements")]),s._v(" "),t("p",[s._v("Since Clojure follows the functional programming paradigm, data should not be mutated, so there is no built-in function to do this. But you can still use seq library functions, such as "),t("code",[s._v("remove")]),s._v(", "),t("code",[s._v("filter")]),s._v(", or "),t("code",[s._v("drop")]),s._v(".")]),s._v(" "),t("p",[s._v("You can learn more "),t("a",{attrs:{href:"https://clojure.org/reference/sequences",target:"_blank",rel:"noopener noreferrer"}},[s._v("here"),t("OutboundLink")],1),s._v(".")]),s._v(" "),t("h3",{attrs:{id:"nth"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nth"}},[s._v("#")]),s._v(" nth")]),s._v(" "),t("p",[s._v("To get a value from the list, use "),t("code",[s._v("nth")]),s._v(" with its index number. As in another language, the index starts at 0 in Clojure.")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("nth")]),s._v(" '"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> 2")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("nth")]),s._v(" '"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> 1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("nth")]),s._v(" '"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> 5")]),s._v("\n")])])]),t("h3",{attrs:{id:"count"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#count"}},[s._v("#")]),s._v(" count")]),s._v(" "),t("p",[s._v("Use "),t("code",[s._v("count")]),s._v(" to get the amount of values in a list.")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("count")]),s._v(" '"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":b")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"d"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"e"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> 8")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("count")]),s._v(" '"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> 3")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("count")]),s._v(" '"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> 0")]),s._v("\n")])])]),t("h2",{attrs:{id:"vectors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vectors"}},[s._v("#")]),s._v(" Vectors")]),s._v(" "),t("p",[s._v("Vectors are similar to lists, except for adding new elements at the end.")]),s._v(" "),t("h3",{attrs:{id:"conj-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#conj-2"}},[s._v("#")]),s._v(" conj")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("conj")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> [0 9 8 7 6 5 4]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("conj")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":b")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> [:a :b "c" 5]')]),s._v("\n")])])]),t("p",[s._v("Vectors also have convenient functions to access elements, like "),t("code",[s._v("first")]),s._v(" and "),t("code",[s._v("second")]),s._v(".")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("nth")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> 6")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("first")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":b")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> :a")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("last")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"I\'m last"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> "I\'m last"')]),s._v("\n")])])]),t("h2",{attrs:{id:"maps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maps"}},[s._v("#")]),s._v(" Maps")]),s._v(" "),t("p",[s._v("Maps are key-value data structure to store multiple values.")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> {}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":id")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abcd-1234"')]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":title")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"My Map"')]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aqua"')]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":author")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":id")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dcba-4321"')]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@me"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> {:id "abcd-1234", :title "My Map", :color "aqua", :author {:id "dcba-4321", :name "@me"}}')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":language")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Clojure"')]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":version")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.10.0"')]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":author")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Rich Hickey"')]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":year")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2007")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> {:language "Clojure", :version "1.10.0", :author "Rich Hickey", :year 2007}')]),s._v("\n")])])]),t("h3",{attrs:{id:"get"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[s._v("#")]),s._v(" get")]),s._v(" "),t("p",[s._v("To get value from key, use "),t("code",[s._v("get")]),s._v(".")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":id")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abcd-1234"')]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":title")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"My Map"')]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aqua"')]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":author")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":id")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dcba-4321"')]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@me"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":color")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> "aqua"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":language")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Clojure"')]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":version")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.10.0"')]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":author")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Rich Hickey"')]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":year")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2007")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":language")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> "Clojure"')]),s._v("\n")])])]),t("h3",{attrs:{id:"assoc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#assoc"}},[s._v("#")]),s._v(" assoc")]),s._v(" "),t("p",[s._v("To add a key-value pair, use "),t("code",[s._v("assoc")]),s._v(", but note that if the value already exists, it will be replaced.")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("assoc")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":language")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Clojure"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":version")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.10.0"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":author")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Rich Hickey"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":year")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2007")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":dialect")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Lisp"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> {:language "Clojure", :version "1.10.0", :author "Rich Hickey", :year 2007, :dialect "Lisp"}')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("assoc")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":id")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abcd-1234"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":title")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"My Map"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aqua"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":author")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":id")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dcba-4321"')]),s._v("\n                  "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@me"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":title")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"My new Map"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> {:id "abcd-1234", :title "My new Map", :color "aqua", :author {:id "dcba-4321", :name "@me"}}')]),s._v("\n")])])]),t("h3",{attrs:{id:"merge"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#merge"}},[s._v("#")]),s._v(" merge")]),s._v(" "),t("p",[s._v("Use "),t("code",[s._v("merge")]),s._v(" to combine maps.")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("merge")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":b")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> {:a "a", :b "b"}')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("merge")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":id")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0123-defg"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Map"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":keys")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":id")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> {:id "0123-defg", :name "Map", :keys {:id :name}}')]),s._v("\n")])])]),t("h3",{attrs:{id:"keys"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keys"}},[s._v("#")]),s._v(" keys")]),s._v(" "),t("p",[t("code",[s._v("keys")]),s._v(" is used to get all keys from a map.")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("keys")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":id")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abcd-1234"')]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":title")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"My Map"')]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aqua"')]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":author")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":id")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dcba-4321"')]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@me"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";; user=> (:id :title :color :author)")]),s._v("\n")])])]),t("h3",{attrs:{id:"vals"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vals"}},[s._v("#")]),s._v(" vals")]),s._v(" "),t("p",[t("code",[s._v("vals")]),s._v(" is used to get all values from a map.")]),s._v(" "),t("div",{staticClass:"language-clojure extra-class"},[t("pre",{pre:!0,attrs:{class:"language-clojure"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("vals")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":language")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Clojure"')]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":version")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.10.0"')]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":author")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Rich Hickey"')]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":year")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2007")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';; user=> ("Clojure" "1.10.0" "Rich Hickey" 2007)')]),s._v("\n")])])]),t("h2",{attrs:{id:"test-your-knowledge"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#test-your-knowledge"}},[s._v("#")]),s._v(" Test your knowledge")]),s._v(" "),t("ul",[t("li",[s._v("Using the REPL, compute the sum of "),t("code",[s._v("112358")]),s._v(" and "),t("code",[s._v("424956")]),s._v(".")]),s._v(" "),t("li",[s._v("Rewrite the following algebraic expression as a Clojure expression: "),t("code",[s._v("(7 + 3 * 10 + 5) / 14")]),s._v(".")]),s._v(" "),t("li",[s._v('Format the phrase "Create simple solutions and make experiences unique" with the '),t("code",[s._v("format")]),s._v(' function for the words "simple" and "unique".')]),s._v(" "),t("li",[s._v("Build your imagination.")])]),s._v(" "),t("h2",{attrs:{id:"day-3-control-flow-and-recursion"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#day-3-control-flow-and-recursion"}},[s._v("#")]),s._v(" Day 3 - Control flow and Recursion")]),s._v(" "),t("p",[t("a",{attrs:{href:"/day3"}},[s._v("See more")])]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"license"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[s._v("#")]),s._v(" License")]),s._v(" "),t("p",[s._v("This project is licensed under the MIT License.")]),s._v(" "),t("p",[t("a",{attrs:{href:"http://badges.mit-license.org",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"http://img.shields.io/:license-mit-black.svg?style=flat-square",alt:"License"}}),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);