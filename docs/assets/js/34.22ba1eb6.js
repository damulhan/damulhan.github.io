(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{373:function(e,t,n){"use strict";n.r(t);var o=n(14),a=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"실제-디자인-design-in-practice"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#실제-디자인-design-in-practice"}},[e._v("#")]),e._v(" 실제 디자인(Design In Practice)")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("Speaker: Rich Hickey")])]),e._v(" "),t("li",[t("strong",[e._v("Conference: "),t("a",{attrs:{href:"https://clojure.org/events/2023/clojure-conj-2023--1880831835",target:"_blank",rel:"noopener noreferrer"}},[e._v("Clojure Conj 2023"),t("OutboundLink")],1),e._v(" - April 2023")])]),e._v(" "),t("li",[t("strong",[e._v("Video: "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=fTtnx1AAJ-c&list=PLZdCLR02grLpIQQkyGLgIyt0eHE56aJqd",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.youtube.com/watch?v=fTtnx1AAJ-c&list=PLZdCLR02grLpIQQkyGLgIyt0eHE56aJqd"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("strong",[e._v("Slides: "),t("a",{attrs:{href:"https://download.clojure.org/presentations/DesignInPractice.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://download.clojure.org/presentations/DesignInPractice.pdf"),t("OutboundLink")],1)])])]),e._v(" "),t("p",[e._v("[Time 0:00:00]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Design in Practice\n\nRich Hickey\n")])])]),t("p",[e._v("모두 와주셔서 감사합니다.  오랜 친구들과 새로운 친구들\n친구들, 새로운 친구들, 특히 모두가 하는 멋진 일들\n모두 만나서 정말 반갑습니다.  제 강연에 앞서 놀라운 그래픽으로 가득 찬\n제 강연에 앞서 멋진 그래픽으로 가득 찬 강연을 준비해준 Alex에게 두 번 감사드립니다.\n더 이상 견딜 수 없을 정도로 놀라운 그래픽으로 가득 찬 제 강연을\n제 강연에서 제외할 수 있었습니다.")]),e._v(" "),t("p",[e._v("Thanks everyone for coming.  It is so great to see all the old\nfriends, and all the new friends, and especially all the very cool\nthings everyone is doing.  I want to doubly thank Alex for scheduling\na talk before mine that was so full of amazing graphics that no one\nwould possibly be able to bear any more, and I could I could leave\nthem out of my talk.")]),e._v(" "),t("p",[e._v("[Time 0:00:26]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Objective - Demystify Design\n\n            not (just) going to the hammock\n                 practice - 'what you do'\n\nconcrete techniques with tangible outputs\ndemonstrate _progress_ 'walk forward'\nactivities you can make PM stories out of\n\n  thus make time for, throughout the dev process\n\n  not pleading for 2 weeks of nebulous 'hammock time' up front\n\nvaluable artifacts that make the effort evident\n\ntips and techniques, not a formal method or anything highfalutin\n")])])]),t("p",[e._v("그래서 이것이 바로 '디자인 인 프랙티스'입니다.\n디자인하는 것입니다.  과거에 몇 차례 강연을 했던 것 같습니다.\n디자인에 대한 많은 아이디어에 관한 것이었지만\n구체적이지 않았습니다.  그리고 그것은 아마도\n디자인에 대한 어떤 상상의 마법을 불러일으켰습니다.  제 생각에는\n디자인은 배울 수 있는 것이라고 생각합니다.  저는 디자인이\n구체적인 활동, 관행 또는 우리가하는 일이 있습니다.")]),e._v(" "),t("p",[e._v("So this is Design In Practice, and the objective here is to demystify\ndesign somewhat.  I think I have given a few talks in the past that\nwere about a lot of the ideas in design, but left the concrete\npractice of it sort of underspecified.  And it has led to maybe a\ncertain imagined magicness to design that I want to dispel.  I think\ndesign is something that you can learn to do.  I think it is something\nthat has concrete activities, practices, or things that we do.")]),e._v(" "),t("p",[e._v("그건 그렇고, 단어 정의 빙고 게임을 하고 있다면\n오늘 카드가 두 장 이상 있었으면 좋겠어요.")]),e._v(" "),t("p",[e._v("Oh, by the way, if you are playing word definition Bingo, you are\ngoing to wish you had more than one card today.")]),e._v(" "),t("p",[e._v("그리고 제가 생각하는 몇 가지 가벼운 것들에 대해 이야기 해 보려고합니다.\n우리가 하는 가벼운 일들, 실제로 실제로 하는 일들.\n클로저와 데이터마이크로를 팀으로 디자인하는 데 있어서요.  그래서 우리는\n구체적인 것들에 대해요.")]),e._v(" "),t("p",[e._v("And to try to talk you through some of what I think are kind of\nlightweight things that we do, actually really do, in trying to do\ndesign as a team on Clojure and Datomic as we work.  So we are talking\nabout concrete things.")]),e._v(" "),t("p",[e._v('제가 하고 싶은 또 다른 일은 여러분이 만들 수 있는 것들에 대해 이야기하는 것입니다.\n활동.  많은 사람들이 "우리 가게에서 더 많은 디자인을 하고 싶어요.\n우리 가게에서 더 많은 디자인을 하고 싶지만, 그럴 수 있는\n정당화할 수 없습니다."  "2주 정도 쉬고 문제를 생각한 다음\n2주 정도 쉬면서 문제에 대해 생각해보고 시작하고 싶습니다."와 같은 모호한 말을 합니다.  그리고 설사 처음에 2주가 반드시 필요한 것은 아닙니다.\n반드시 필요한 것은 아닙니다.')]),e._v(" "),t("p",[e._v('Another thing I want to do is talk about things that you can make into\nactivities.  I think a lot of people struggle when they say, "well, we\nwant to do more design in our shop, but we can never get it\njustified."  We are saying nebulous things like, "I want to take two\nweeks off and think about the problem before we start."  And even if\nyou get that, two weeks at the beginning is not necessarily what you\nare going to need.')]),e._v(" "),t("p",[e._v("따라서 활동을 구체화하는 것의 좋은 점 중 하나는\n프로젝트 관리 시스템에 다음과 같이 입력할 수 있다는 것입니다.\n프로젝트 관리 시스템에 들어갈 수 있다는 것입니다.")]),e._v(" "),t("p",[e._v("So one of the things that is good about reifying activities is that\nthey can become things that go into your project management system as\nstories that you are going to do that will have outputs.")]),e._v(" "),t("p",[e._v('오늘 제가 이야기하고 싶은 또 다른 것은 진행 상황입니다.  많은\n사람들은 "나는 디자인이 뭔지 안다"고 말합니다.  저는 사람들이\n기획서나 다이어그램 같은 것을 만드는 것을 봤어요.  하지만 저는\n정말 감각이 없습니다: 내가 다이어그램을 제대로 작성했는가?  내가\n무언가를 성취하고 있는가?"  소프트웨어를 만들 때 우리는 그것이 축적되는 것을 봅니다,\n매일 점점 더 많은 일을 하는 것을 보게 됩니다.  그리고 우리가 디자인할 때\n앞으로 나아간다는 것은 무엇을 의미할까요?  우리가 앞으로 나아가고 있다는 것을 알고 있을까요?\n아니면 그냥 빙빙 돌고 있을까요?')]),e._v(" "),t("p",[e._v('The other thing I want to talk about today is progress.  A lot of\ntimes people say, "I know what design is.  I have seen people doing\nplanning sheets, or diagrams, or things like that.  But I do not\nreally have a sense of: Did I write the right diagram?  Am I\naccomplishing something?"  When we make software, we see it accrete,\nand we see it do more and more stuff every day.  And when we design,\nwhat does it mean to move forward?  Do we know we are moving forward,\nor just spinning around?')]),e._v(" "),t("p",[e._v("그래서 이것은 어떤 종류의 방법도 아닙니다.  저는 그런 방식을 채택하고 싶지 않습니다.  나는 적절한 방법에 비를 내리려는 것이 아닙니다.  그리고 정말 멋진 디자인 방법론은 정말 멋진 디자인 방법론이 많이 있습니다.")]),e._v(" "),t("p",[e._v("So this is not any kind of method.  I do not want to adopt that.  I am\nnot trying to rain on proper methods.  And there are there are plenty\nof really cool design methodologies out there.")]),e._v(" "),t("p",[e._v("[Time 0:02:39]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Design\n\n              design - Latin for 'waiting to code'\n\n_coding happens throughout_\n\nperforming experiments\n\nanswering interim questions\n\nwhy you want a language that supports exploratory programming\nwithout being in a project building context\n")])])]),t("p",[e._v("우리 모두 알다시피, 라틴어로 '디자인'은 '코딩이 허용되지 않음'을 의미한다는 것을 되새기게 하기 위함입니다.")]),e._v(" "),t("p",[e._v('So we all know, I am just reminding you, Latin for "design" means "not being allowed to code".')]),e._v(" "),t("p",[e._v("[청중 폭소]\n[Audience laughter]")]),e._v(" "),t("p",[e._v("저는 사실 그렇지 않다고 생각합니다. 사실, 강연을 진행하면서 알게 되겠지만 디자인 프로세스 전반에 걸쳐 코딩을 하는 것이 중요하다고 생각합니다. 반드시 시스템을 작성하기 시작하는 것이 아니라 시스템이 어떻게 될지 탐색하고, 시스템의 일부가 될 요소에 대해 배우고, 질문에 답하고, 그런 것들입니다. 이런 종류의 작업에 프로젝트와 같은 오버헤드가 전혀 없는 언어로 작업하는 것이 중요하다고 생각하는 이유 중 하나이기도 합니다. 탐색적 프로그래밍을 시작하기 위해 프로젝트를 시작하거나 프로젝트 컨텍스트에 있을 필요가 없다는 것이죠. 에디터를 열고 시작하면 됩니다.")]),e._v(" "),t("p",[e._v("I do not actually think that is true.  In fact, I think that as we\nwill see as we go through the talk that you do coding throughout the\ndesign process.  Not necessarily starting to write your system, but\nexploring what your system might become, learning about the things\nthat are going to be parts of your system, answering questions, and\nthings like that.  And it is one of the reasons why I think it is\nimportant to work in a language where that kind of work has zero\nproject-y kind of overhead.  That you do not need to have started your\nthing, or be in a project context to start doing exploratory\nprogramming.  You open up your editor and you go.")]),e._v(" "),t("p",[e._v("[Time 0:03:28]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Design (cont.)\n\n                'mark out, a plan'\n\nthe emphasis in this talk is about supporting your (team's) reasoning _process_,\n      not just the end-product blueprint-like design\n\n_writing down_ your thoughts helps you form them\n\n       _techniques can guide your thinking and decision-making_\n\n  reified/refined/shared concepts\n\n  onboarding/resumption\n\n  validation\n\n  eventually, documentation\n")])])]),t("p",[e._v('아니요. 그래서 실제로 "디자인"이라는 단어는 "무언가를하기위한 계획을 표시"하는 것을 의미합니다.\n무언가를 하기 위한 계획을 표시하는 것, 또는 적어도 이 강연에서 사용할\n이야기.  저는 이 개념을 확장해서 세상에 어떤 일이 일어나야 한다는 느낌에서 출발해\n세상에 어떤 일이 일어나야 한다는 감각에서 시작해서\n그 계획을 표시하는 능력, 계획에서 표시하는 능력 그리고\n그 다음에는 그 계획의 후속 개발까지 이어지길 바랍니다.')]),e._v(" "),t("p",[e._v('No.  So really "design", the word means to "mark out a plan for doing\nsomething", or at least the meaning that we are going to use in this\ntalk.  I am going to expand that idea to be the entire set of steps\nthat get you from a sense that something should happen in the world,\nto the ability to mark out that plan, the marking out of the plan, and\nthen hopefully the subsequent development of it.')]),e._v(" "),t("p",[e._v("그리고 이 마크 아웃은 매우 중요하다고 생각합니다.\n중요하다고 생각합니다.  우리는 항상 글을 쓰게 될 것입니다.  우리는\n우리 얼굴과 팀원들의 얼굴 앞에 텍스트를 써서\n우리가 무슨 생각을 하고 있는지 알 수 있도록 말이죠.  그리고 저는 이것이\n처음에 생각하는 데 도움이 되는 매우 중요한 것입니다.\n매우 중요하다고 생각합니다.")]),e._v(" "),t("p",[e._v("And this marking out is something I think is going to be super\ncritical.  We are going to be writing all the time.  We are going to\nbe putting text in front of our faces and in front of the faces of our\nteammates so we can see what we are thinking about.  And I think this\nis something that is very important for helping you think in the first\nplace.")]),e._v(" "),t("p",[e._v("이것은 아카이브 활동이 아닙니다.  후손을 위해\n후손을 위해.  문서화 작업도 아니고요.\n그런 것이 아닙니다.")]),e._v(" "),t("p",[e._v("This is not an archival activity.  This is not about capturing things\nfor posterity.  It is not about creating documentation as you go or\nanything like that.")]),e._v(" "),t("p",[e._v("이것은 사고의 일부로서 글을 쓰는 것입니다.  무언가를 종이에\n종이에 적는 것이죠.  그런 다음 그것을 볼 수 있고\n머릿속에서 시작되었지만 이제 그것은 당신에게 입력이됩니다.\n머릿속에서 시작되었지만요.  또한, 한동안 잊어버렸던 내용을 다시 떠올리거나\n주워 담을 수 있도록 도와주기도 하고, 다른 사람들이 작업에 동참할 수 있게 해주기도 합니다.  그리고\n결국에는 그 내용을 문서로 만들어서\n문서화할 수 있습니다.")]),e._v(" "),t("p",[e._v("This is about writing as part of thinking.  Putting something down on\npaper makes it a thing.  It is something that you can then look at and\nnow it becomes an input to you, even though it started in your own\nhead.  It also helps you pick things up when you have left them around\nfor a while, or allows people to join you in your work.  And then\nmaybe eventually you will turn it into something that you will use to\ndocument what happened in the end.")]),e._v(" "),t("p",[e._v("[Time 0:04:48]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Words\n\n           Choose good words, _all the time_\n     not about bikeshedding or premature marketing\n\nprecision in naming == precision in thinking 'before + cut'\n\n          _eschew nicknames, superheroes etc._\n               not semantic/meaningful\n               give cover to fuzziness\n            don't track evolving thinking\n\n_be succinct_ 'gird/gather up'\nbrief, clear and complete\nnot just concise 'cut off', or merely hinted at\n")])])]),t("p",[e._v("그래서 우리는 글을 쓸 것입니다.  우리는 이야기를 할 것이지만\n특히 단어를 적고 다이어그램을 작성할 수 있기를 바랍니다.\n적을 수도 있습니다.  그리고 좋은 단어를 선택하는 것이 매우 중요하다고 생각합니다.\n항상 해야 하는 일입니다.  그리고 저는\n제품 이름이나 그런 것을 고르는 것에 대해 말하는 것이 아닙니다,\n마케팅에 관한 것을 말하는 것이 아닙니다.")]),e._v(" "),t("p",[e._v('여러분이 의도한 의미를 담고 있는 단어를 선택하는 것입니다.\n모든 사람들이 당신이 무언가를 말할 때 당신이 의미하는 바에 대해\n선택하는 것입니다.  정확성과 절단에 대한 이 아이디어는\n항상 등장할 것입니다.  이 "시스" 부분은 절단에 관한 것입니다.  그것은\n"결정하다"와 같은 부분입니다.')]),e._v(" "),t("p",[e._v("따라서 우리는 말을 할 때 정확해야 합니다.\n우리가 말하는 것이 무엇인지, 그리고 우리가 말하는 것이 아닌 것이 무엇인지 알 수 있습니다.")]),e._v(" "),t("p",[e._v("그래서 저는 별명을 좋아하지 않습니다.  슈퍼히어로 같은 것도 싫고요.\n가장 끔찍한 일 중 하나는 프로젝트에 도착해서\n상자 안에 별명, 상자 안에 별명, 상자 안에 별명\n상자 안의 별명, 상자 안의 별명, 레이블이 없는 화살표가 서로를 가리키며\n서로를 가리키는 화살표가 있습니다.  다른 사람을 돕는 것이 아니라\n스스로를 돕는 것입니다.  이러한 이름은 의미가 없습니다.")]),e._v(" "),t("p",[e._v('특히 의미 있는 이름이 아니기 때문에, 이 이름은\n마음이 바뀐다고 해서 바꿀 필요가 없다는 뜻이기도 합니다.  나는 그것을 불렀다\n"크립토나이트"라던가 "플래시"라고 불렀고, 내가 하는 일을 바꾼다고 해도\n여전히 "플래시"라고 부를 수 있어요.  괜찮을 거예요.  그래서 당신은\n정확한 단어를 사용하고 싶어요.')]),e._v(" "),t("p",[e._v('그리고 자주 할 수 있어야 할 또 다른 일은\n많은 공간을 차지하지 않는 말을 하는 것입니다.  그리고 저는 그것이\n또 다른 중요한 기술이라고 생각합니다.  이 강연에서 제가 "간결하다"고 말하는 것을 보게 될 것입니다.\n이 강연에서 계속해서 "간결하다"고 말하는 것을 보게 될 것입니다.\n그 의미를 이해하는 것이 중요합니다.  저는 그것이 무엇을 의미하는지 몰랐습니다.\n어원적 관점에서 알고 있어서 찾아봤습니다.  그 뜻은\n전투 전에 토가를 모으다.  띠를 두르다 또는 모으다.')]),e._v(" "),t("p",[e._v("그리고 중요한 것은 당신이 모을 때 모이는 것은\n간결하게 말하자면 모든 것을 모아야 한다는 것입니다.  간결한 것이\n간결한 것이 아닙니다.  존재에 관한 것이 아닙니다: 여기서 할 말이 여섯 단어밖에 없으니\n중요한 세부 사항은 생략해야 합니다.\n여섯 단어로 끝내야 하기 때문입니다.  그래서 우리는 우리의\n생각을")]),e._v(" "),t("p",[e._v("So we are going to be writing.  We are going to be talking, but\nespecially writing words down, hopefully, and we can write diagrams\ndown, too.  And I think that choosing good words is super critical.\nIt is something you should do all the time.  And I am not talking\nabout picking the right name for your product or anything like that,\nor doing something that is about marketing.")]),e._v(" "),t("p",[e._v('It is about choosing words that have the meaning that you intend and\nthat help everybody come to a shared understanding of what you mean\nwhen you say something.  This idea of precision and cutting is going\nto come up all the time.  That "cis" part is about cutting.  It is the\nsame part of "decide".')]),e._v(" "),t("p",[e._v("So we we need to be precise when we are saying things so we know what\nis the thing we are saying, and what is not the thing we are saying.")]),e._v(" "),t("p",[e._v("So I do not like nicknames.  No superheroes or anything like that.\nOne of the most horrifying things was arriving at a project and\nfinding a diagram of the project that was: nickname in a box, nickname\nin a box, nickname in a box, with unlabeled arrows pointing from one\nto the other.  You are not helping anyone else, and you are not\nhelping yourself.  These names are not semantic.")]),e._v(" "),t("p",[e._v('And in particular by not being a meaningful name, it means that it\ndoes not have to change when you change your mind.  I called it\n"Kryptonite" or something, "The Flash", and if I change what I am\ndoing it could still be called "The Flash".  It will be fine.  So you\nwant to use precise words.')]),e._v(" "),t("p",[e._v('And the other thing you are going to need to be able to do often is\nsay something rather involved in not much space.  And I think that is\nanother critical skill.  You are going to see me say "succinct" over\nand over and over again in this talk, and it is important to sort of\nunderstand what that means.  Which I did not know what it meant you\nknow from an etymology standpoint, so I looked it up.  It means to\ngather up your toga before battle.  To gird or gather up.')]),e._v(" "),t("p",[e._v("And the important thing is that what you are gathering up when you are\ntrying to be succinct is the entirety of things.  It is not about\nbeing concise.  It is not about being: I have only got six words to\nsay here, so I have got to leave out the critical details because I\nneed to get it done in six words.  So we are going to gather up our\nthoughts.")]),e._v(" "),t("p",[e._v("[Time 0:07:08]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: More Words\n\n      _use the dictionary_ (not just good for writing keynotes)\n                      _go right to the origins_\n                  - most useful/abstract semantics\n              - discover the composition within words\n\na good word later becoming 'wrong' could mean:\n\n  you've changed your mind w/o acknowledging it\n\n  you are drifting from your intentions\n\n    _your thinking will evolve and your words (story titles etc) should also_\n")])])]),t("p",[e._v("다른 한 가지는 사전입니다.  그것은 단지 좋은 것이 아닙니다\n좋은 것이 아닙니다.  매일매일 유용합니다.  우리는 실제로\n사전을 사용합니다.  이름을 지어야 할 지점에 도달하면\n사전을 꺼냅니다.  모두가 사전을 뒤적이며\n사전을 뒤지며 올바른 단어를 찾으려고 노력합니다.  그리고 좋은\n단어 -- 저는 그것이 얼마나 멋진 일이라고 생각하는지 말할 수 없습니다.\n여러분도 그렇게 해보세요.")]),e._v(" "),t("p",[e._v("특히 그 단어의 어원을 찾아보는 것도 좋습니다,\n어원을 살펴보면 우리가 사용하는 대부분의 단어들이\n합성어이며 전치사 접두사 부분은 정말 흥미로운 것들로 가득 차 있습니다.\n흥미로운 것들로 가득 차 있습니다.  예를 들어 무언가를 향하고 있나요?  멀리 떨어져 있는가?\n뭔가?  물건을 함께 움직이고 있나요?  분리하고 있는가?")]),e._v(" "),t("p",[e._v("이렇게 하면 추상화 과정에 불이 붙는다고 생각합니다.  여러분은\n세부 사항에 얽매이지 않는 방식으로 사물을 생각하기 시작합니다,\n더 큰 아이디어에 대해 더 많이 생각하게 되죠.")]),e._v(" "),t("p",[e._v("정확한 단어 사용의 또 다른 장점은 다음과 같습니다.\n이 단어를 보고 무언가를 전달하려고 하면\n그 단어가 잘못된 단어라는 것이 분명해집니다.  그것은 아마도\n좋은 단어였을 수도 있습니다.  그리고 완벽하게 괜찮을 수도 있습니다.\n마음이 바뀌었을 수도 있습니다.  생각이 발전한 것입니다.  새로운 정보를 얻었고\n새로운 정보를 얻었고 뭔가 다른 일을 하고 있습니다.  그러나 위대한\n좋은 점은 정확한 단어를 사용했다면 그 단어가 틀린 것처럼 보일 수 있다는 것입니다.\n잠시 멈추고 더 나은 단어를 선택할 수 있다는 것입니다.")]),e._v(" "),t("p",[e._v("The other thing is this dictionary thing.  It is not just good for\nwriting talks.  It is good every day.  We do actually use the\ndictionary while we work.  We get to a point where we need to name\nsomething and we will take out the dictionary.  Everybody is racing\nthrough the thesaurus and trying to find the right word.  And a good\nword -- I cannot state how wonderful I think that is and I encourage\neverybody to go do it.")]),e._v(" "),t("p",[e._v("And especially to get down to the origins where they break apart,\nbecause origins will always show you that most of the words that we\nuse are composite and that prepositional prefix part is full of really\ninteresting things.  Like: Is it towards something?  Is it away from\nsomething?  Is it moving stuff together?  Is it cutting it apart?")]),e._v(" "),t("p",[e._v("I think that doing this fires up the process of abstraction.  You\nstart thinking about things in a way that is not tied to the details,\nbut more about bigger ideas.")]),e._v(" "),t("p",[e._v("The other advantage of using precise words is that you could be\nlooking at this word and trying to communicate something, and it\nbecomes evident that that word is the wrong word.  It might have been\na good word.  And it might be that, in a perfectly fine way, you have\nchanged your mind.  You have evolved your thinking.  You have got some\nnew information and you are doing something different.  But the great\nthing is if you have been using precise words, they will seem wrong\nand you can pause and pick a better word.")]),e._v(" "),t("p",[e._v("[Time 0:08:38]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Technique: Glossary\n\n        _terms are inevitable in tech_\n             valuable shorthand\n\ndon't presume a shared understanding\n\n  define, in one place\n\n  use uniformly and consistently\n\nhelps non-tech folks trying to follow along\n\n_when terms break, fix or abandon_\n")])])]),t("p",[e._v("좋아요.  이제 첫 번째 기술을 살펴보겠습니다.  첫 번째\n기술은 작업하는 동안 구축 중인 자료 세트에 용어집을 추가하는 것입니다.\n용어집을 추가하는 것입니다.  우리는 모든 종류의\n용어와 기술을 추가하는 것입니다.  기술자들 사이에서도\n기술자들 사이에서 우리가 한 마디만 하면 방에 있는 모든 사람들이\n그 말을 듣고 반복해서 사용했음에도 불구하고 머릿속에 다른 아이디어가 떠오를 것입니다.\n그것을 듣고 반복해서 사용했습니다.  따라서 모든 사람이\n모든 사람이 여러분의 말을 이해한다고 가정하지 마세요.")]),e._v(" "),t("p",[e._v("사물을 정의하는 장소, 사물을 정의하는 장소가 필요합니다.\n사물을 정의한 후에는 일관되게 사용해야 합니다.\n일관되게 사용해야 합니다.  한 단어를 두 가지 다른 의미로 사용하지 마세요.  하지 마세요.\n그것에 대해 느슨해지지 마세요.")]),e._v(" "),t("p",[e._v("이것은 일반적으로 어렵다고 생각하므로 목표입니다.  아니\n완벽하게 하는 사람은 없습니다.  이것은 열망해야 할 일입니다.")]),e._v(" "),t("p",[e._v("그리고 다른 하나는 무언가가 고장 나면 고치거나 버리는 것입니다.\n따라서 이러한 인공물 중 일부와 이러한 기술 중 일부는 일시적인 것들입니다.\n일시적인 것입니다.  여러분은 그것들을 할 것이고 그리고 나서\n계속 나아갈 것입니다.  하지만 이것은 여러분이 유지해야 하는 것입니다.")]),e._v(" "),t("p",[e._v("All right.  So we are going to have our first technique.  The first\ntechnique is: add a glossary to your set of stuff that you are\nbuilding while you are working.  We are going to have all kinds of\nterms and technology that is going to happen.  It is amazing even\namongst technologists, we will say a word, and everybody in the room\nwill have a different idea in their head, even though they have heard\nit and used it over and over and over again.  So do not presume that\neverybody understands what you are saying.")]),e._v(" "),t("p",[e._v("You want a place where you define things, one place where you define\nthings, and then after you have defined it you want to use it\nconsistently.  Do not use words to mean two different things.  Do not\nbe lax about that.")]),e._v(" "),t("p",[e._v("This is hard to do, I think, in general, so it is an objective.  No\none does it perfectly.  This is stuff to aspire to.")]),e._v(" "),t("p",[e._v("And then the other thing is if something breaks, fix it or drop it.\nSo some of these artifacts and some of these techniques are things\nthat are ephemeral.  You are going to do them and and you are going to\nmove on.  But this is one that you have to maintain.")]),e._v(" "),t("p",[e._v("[Time 0:09:39]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('slide title: Example: Glossary\n\nTerm         Meaning\n\nlocality     A property of data: It is a measure of the distribution\n             of datoms you need to find, across segments as seen from\n             the perspective of one of the indexes.\n\naffinity     A strategy for assigning partitions, where you say that\n             things are related and should be in the same partition,\n             and thus grouped together in storage\n\n             (could be coaligned with another entity, with time, with\n             a value, with a batch)\n\npartition    See https://docs.datomic.com/on-prem/schema/schema.html#partitions\n             Partitions group data together (in storage), providing\n             locality of reference when executing queries across a\n             collection of entities.\n             Entities in the same partition to sort and be stored\n             together in E-leading indexes, i.e. EAVT and AEVT.\n             Partitions are associated with entity ids, and are named\n             by keywords, or referred to by index in a space.\n             Encoded as hi bits in entity ids.\n             Partition entity ids are suitable as arguments to\n             d/terpid, d/entid-at, and :db/force-partition\n\nexplicit partition\n             partition associated with an explicitly-created, named\n             partition entity\n              datomic comes with 3 explicit partitions: :db.part/db\n             :db.part/user and :db.part/tx\n\nimplicit partition\n             a partition that can be referred to by its index in a\n             range of integers 0<=x<524288.  These partitions have\n             entity ids, and they require no explicit installation.\n             Their entity ids consist of: part=index with the 20th bit\n             set, eidx=0\n\n             In larger applications, you may want to spread data\n             across a larger number of partitions.  Implicit\n             partitions provide a mechanism for this.\n             Implicit partitions provides a way to manage a large\n             number of partitions numerically and algorithmically.\n\n             old ref to partition sharding\n\nprimary      the owning side of affinity, use to choose partition for\n             related (e.g. the customer)\n\nrelated      the "owned" side of affinity, gets partition from primary\n             (e.g. some activity entities related to a particular\n             customer)\n')])])]),t("p",[e._v("이것은 용어집의 예시입니다.  아마 보이지 않으실 겁니다.  I\n조금 더 많이 볼 수 있도록 노력한 것 같습니다.\n하지만 이것은 실제 기능에 대해 이야기하는 것입니다.  저희는\n지역성에 대해 이야기할 때 사용하는 매우 구체적인 단어들이 있습니다,\n지역성, 선호도, 파티션에 대해 이야기하고 있습니다.  그래서 이것은 우리가\n8개월 정도 지속된 프로젝트를 통해 유지한 것입니다.\n8개월 정도 지속되었습니다.  그래서 저는 여러분께 이 작업을 권장합니다.")]),e._v(" "),t("p",[e._v("So this is an example glossary.  You probably cannot see that.  I\nthink I worked on how I can make you be able to see a little more.\nBut this is a real one talking about a feature.  We have a bunch of\nvery specific words that we are using to talk about locality,\naffinity, and partitions in Datomic.  And so this is a thing that we\nhave, and that we maintained through a project that lasted eight\nmonths or so.  So I encourage you to do this.")]),e._v(" "),t("p",[e._v("[Time 0:10:09]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Questions\n\n          _a most powerful thinking tool_\n\nto formulate a question is to reify what you seek\n\ngetting questions right is half the battle\n\n_questions provoke_, often novel thinking\n\n  logic (just) helps us rule out some of it\n")])])]),t("p",[e._v("좋아요.  그래서 우리가 할 또 하나의 일은\n가장 중요한 것은 질문하는 것입니다.")]),e._v(" "),t("p",[e._v("질문은 매우 강력한 도구입니다.  그리고 그것은 오래된\n도구입니다.  그리고 질문을 던지는 것의 아름다운 점 중 하나는\n질문을 공식화하는 것의 아름다운 점 중 하나는 찾고 있는 것이 무엇인지\n무언가를 찾고 있다는 것을  원하는 것이 있다는 것을 명확히 한 것입니다.")]),e._v(" "),t("p",[e._v("그리고 우리는 항상 무언가를 말한다고 생각합니다.  그리고 당신이 말할 때\n당신의 의도는 분명하지 않습니다.  무언가를 물어볼 때\n대답을 얻으려고 할뿐만 아니라 필요한 것이 무엇인지\n분명해집니다.")]),e._v(" "),t("p",[e._v("그래서 저는 좋은 질문을 하는 것이 기술이라고 생각합니다.  또 하나는\n더 자주하면 더 잘할 수 있습니다.\n질문의 또 다른 측면은 질문이 도발적이라는 점입니다.\n도발적입니다.  그들은 당신을 찌릅니다.  그리고 물론 다른 사람에게 질문을 할 때\n다른 사람에게 질문을 할 때 그들은 찔린 것처럼 느낍니다.  따라서 여러분은\n질문하고, 질문받고, 질문하는 과정에 익숙해져야 합니다.\n질문하는 과정에 익숙해져야 합니다.  이는 긍정적인 일입니다.")]),e._v(" "),t("p",[e._v("논리는 의사결정을 내리고 문제를 해결하는 데 중요한 부분입니다,\n하지만 대부분 부정적인 측면도 있습니다.  우리는 논리를 사용하여 '안 된다,\n이건 안 된다.  이것은 일관성이 없습니다.  만약 이것이 사실이라면\n사실일 수 없습니다.  이는 대부분 우리가 무언가를 배제할 때 사용하는 방법입니다.")]),e._v(" "),t("p",[e._v("All right.  So the other thing we are going to be doing as part of an\noverarching sense of skills is asking questions.")]),e._v(" "),t("p",[e._v("This is a very powerful tool: asking questions.  And it is an old\ntool.  And one of the beautiful things about asking a question, and\nformulating a question, is: you have made clear that you are looking\nfor something.  That there is a thing that you want.")]),e._v(" "),t("p",[e._v("And I think that we state things all the time.  And when you state\nthings, your intentions are not evident.  When you ask things, not\nonly do you want to try to get an answer, but what you need becomes\nevident.")]),e._v(" "),t("p",[e._v("So I think asking good questions is a skill.  It is another one of\nthese things that if you do it more often you will get better at it.\nThe other thing I think is an aspect of questions is that they are\nprovocative.  They poke you.  And of course when you ask a question of\nsomeone else, they feel like they have been poked.  So you have to get\ngood at asking, and being asked, and being comfortable with the\nquestioning process of something.  That is a positive thing.")]),e._v(" "),t("p",[e._v("Logic is an important part of making decisions and solving problems,\nbut it is mostly a negative thing.  I mean, we use logic to say: no,\nthis does not hold.  This is inconsistent.  If this is true, that\ncannot be true.  It is mostly a way we use to rule things out.")]),e._v(" "),t("p",[e._v("[Time 0:11:36]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Technique: The Socratic Method\n\n              _interrogate 'ask together'_\n            examine an idea dispassionately\n   questioning its underlying assumptions, consistency\n\nDispassionate 'without suffering'\n\n  you are not your idea\n\n  you are a source of ideas, some better than others\n\n_We don't define/opine the truth, we discover it_\n\n'The Socratic Method: A Practitioner's Handbook' - Farnsworth\n")])])]),t("p",[e._v("그래서 제가 추천하는 또 다른 기법은 소크라테스 방식을 발견하고, 읽고, 활용하는 것입니다.\n소크라테스 방법을 활용하는 것입니다.  이것은 많은\n분명히 그 뒤에 숨겨진 역사와 잘 정리된 설명이 있습니다.")]),e._v(" "),t("p",[e._v("함께 하는 활동입니다.  리더가 질문으로 사람들을 고문하는 것과는\n팀원들은 동의하지 않겠지만요.\n진술.  하지만 질문과 대답을 통해 진실을 찾으려고\n진실을 찾기 위해 함께 노력한다는 의미입니다.  질문에 대한 답을 얻고\n질문하고 그 답을 추가 조사에 노출시켜 결국에는\n진실에 도달하려고 노력하는 것입니다.")]),e._v(" "),t("p",[e._v("앞서 질문이 도발적이라고 말씀드렸습니다.  질문은\n아이디어에 대한 냉정한 검증이어야 합니다.  그리고 그것은\n고통.  그리고 저는 여러분이 시도하는 것이 큰 도전이라고 생각합니다.\n팀과 소크라테스 방식, 이것은 일반적이지 않으며 사회적으로 생각하면\n이런 종류의 대화는 사라졌고 숙련 된 방법으로 사용되었습니다.\n협력하는 사람들 사이의 관행이 사라졌습니다.  그래서\n논쟁이나 공격, 적대감의 한 형태처럼 보입니다.\n그런 식으로요.  그런 것이 아닙니다.")]),e._v(" "),t("p",[e._v("그래서 제가 추천하는 것 중 하나는 자신의 생각으로부터\n자신의 생각에서 벗어나세요.  혼자서 이 작업을 할 때에도 다음과 같이 해야 합니다.\n자신의 아이디어를 포즈를 취하고 촬영할 것으로 생각해야 합니다.\n쏴버리세요.  그리고 이 작업을 반복해서 반복하고 아이디어에 집착하지 마세요.\n아이디어에 집착하지 말고 아이디어와 동일시하지 마세요.  그리고 전체 아이디어\n여기에는 객관적인 진실이 있고 우리는 그것을 찾으려고 한다는 것입니다.\n알아내려는 것입니다.  우리는 그것을 발명하지 않습니다.  우리 머리에서 나오는 것이 아닙니다.\n머리에서 나오는 것이 아닙니다.  우리는 그것을 발견하고 있습니다.")]),e._v(" "),t("p",[e._v("소크라테스 방식에 대해 더 자세히 알고 싶으시다면 이 책을 추천합니다.\n책입니다.  정말 환상적입니다.  아마 처음에 많은 역사가 있습니다.\n처음에는 건너 뛸 수 있지만 훌륭하다고 생각합니다.")]),e._v(" "),t("p",[e._v("So another technique I recommend is to discover, read about, and\nutilize the Socratic method.  This is a proper thing with a lot of\nhistory behind it, obviously, and some good organized descriptions.")]),e._v(" "),t("p",[e._v("It is an activity you do together.  It is not like a leader torturing\npeople with questions, although my teammates will disagree with that\nstatement.  But it means to sort of work together on trying to find\nthe truth by asking and answering questions.  By taking an answer to a\nquestion and exposing that answer to further examination, eventually\ntrying to get to the truth.")]),e._v(" "),t("p",[e._v("And I talked before about questions being provocative.  It is supposed\nto be a dispassionate examination of ideas.  And that means not\nsuffering.  And I think that it is a big challenge as you try to do\nSocratic method with teams, this is not common, and I think socially\nthis kind of dialogue has fallen away, and its use as a skilled\npractice amongst people who are cooperating has fallen away.  So it\njust seems like a form of argument or attack or hostility or something\nlike that.  That is not what it is.")]),e._v(" "),t("p",[e._v("So one of the things I recommend is you try to detach yourself from\nyour own ideas.  Even when you do this by yourself, you should be\nthinking about your ideas as things you are going to pose and shoot\ndown.  And do that over and over and over again and not get attached\nto your ideas, not co-identify with your ideas.  And the whole idea\nhere is that there is some objective truth and we are trying to find\nout what it is.  We are not inventing it.  It is not coming out of our\nheads.  We are discovering it.")]),e._v(" "),t("p",[e._v("If you want to learn more about the Socratic method I recommend this\nbook.  It is really fantastic.  There is a bunch of history maybe at\nthe beginning you would skip, but I think it is great.")]),e._v(" "),t("p",[e._v("[Time 0:13:33]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Father Watson's Questions\n\nWhere are you at?\n\nWhere are you going?\n\nWhat do you know?\n\nWhat do you need to know?\n\n\nDevs are good at the first two, but those miss 'why?'\n")])])]),t("p",[e._v("그래서 우주에서 가장 위대한 소크라테스 마법사 중 일부는\n예수회입니다.  저는 운이 좋게도 고등학교 때 예수회와 함께 공부할 수 있었습니다.\n고등학교 때요.  제 담임 선생님은 예수회 신부 왓슨 신부님이셨죠.\n그는 항상 우리에게 이 네 가지 질문을 던지곤 했어요.  그리고 그는\n물리학 수업과 대수학 수업에서 이런 질문을 하셨어요.\n문제를 풀기 위한 방법으로요.")]),e._v(" "),t("p",[e._v("이런 질문은 문제를 볼 때 의미가 있습니다.  무엇을\n뭘 찾았어?  X가 있고, Y를 알고 있고, X를 찾으려고 하고 있습니다.\n여기 있어요.")]),e._v(" "),t("p",[e._v("어디로 가려고요?  X가 뭔지 알아내려고요.  난 알아\nX.  Y를 알아야겠어  뭘 하려고요?  나는 시도 할거야\n물건을 반대편으로 옮겨서 Y를 격리시킬거야.  그리고 그게 다였습니다.\n괜찮았어요.")]),e._v(" "),t("p",[e._v('그러나 그는 또한 교실에서 다음과 같은 질문을 인생 질문으로 우리에게 물었습니다.\n어디 있니?  어디로 가니?  무엇을 알고 있니?  무엇을\n무엇을 알아야 하나요?  그리고 저는 개발자로서 이 "어디에 있니?"라는 질문이\n어디에?" "어디로 가는가?"  이것이 우리가 잘하는 일입니다.  이\n일어서는 것입니다.  어제 뭐 만들었어?  빵 상자를 만들었어요.  오늘은\n오늘은 뭘 만들죠?  토스터기를 만들고 있어요.')]),e._v(" "),t("p",[e._v("그리고 물건을 확인합니다.  그리고 당신은 일을 하느라 바쁘지만\n왜 그런 일을 하는지에 대해 자주 이야기하지 않습니다.  그리고\n이 후자의 두 가지 질문에서 중요한 부분은 당신이 지금\n왜 일을 하는지에 대해 이야기하는 것입니다.\n지식을 발전시킨다는 관점입니다.")]),e._v(" "),t("p",[e._v("So some of the the biggest Socratic wizards in the universe are the\nJesuits.  And I was lucky enough to study with the Jesuits back in\nhigh school.  And my homeroom teacher was father Watson, a Jesuit.\nAnd he would always be asking us these four questions.  And he would\nask us these questions in physics class and in algebra class as a way\nto do the work, do the problem.")]),e._v(" "),t("p",[e._v("This stuff makes sense when you are looking at a problem.  What have\nyou got?  I have got X, and I know Y, and I am trying to find X and\nthe stuff's over here.")]),e._v(" "),t("p",[e._v("Where are you going?  I am going to try to discover what X is.  I know\nX.  I need to know Y.  What are you going to do?  I am going to try to\nisolate Y by moving stuff over to the other side.  And that was all\nfine.")]),e._v(" "),t("p",[e._v('But he also asked us these questions in homeroom as life questions\nWhere are you at?  Where are you going?  What do you know?  What do\nyou need to know?  And I think that as developers this "Where you are\nat?" "Where you are going?"  This is what we do we are good at.  This\nis stand up.  What did you make yesterday?  I made a bread box.  What\nare you making today?  I am making a toaster.')]),e._v(" "),t("p",[e._v("And then checking stuff off.  And you are busy doing things, but you\nare not often talking about why you are doing the things.  And the\nimportant part of these latter two questions is that you are now\ntalking about why you are doing things from the perspective of moving\nyour knowledge forward.")]),e._v(" "),t("p",[e._v("[Time 0:14:59]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Technique: Reflective Inquiry\n\n                            Understanding            Activity\n----------------------------------------------------------------------\nStatus 'to stand'       What do you know?          Where are you at?\n----------------------------------------------------------------------\nAgenda 'to be done'     What do you need to know?  Where are you going?\n\n\nthis is a framework that can be applied throughout the design process\n\n       _note the importance of thinking about your thinking_\n                         reflect - 'bend back'\n\n  inquiry - advancing knowledge, is the driver\n")])])]),t("p",[e._v("따라서 이 네 가지 질문을 두 가지 축으로 나누고\n두 단계로 나누겠습니다.  하나는 이해의 축입니다.  우리의\n이해에 무슨 일이 일어나고 있나요?  우리의 이해는 어떻게 발전하고 있나요?  우리\n이만큼 이해했습니다.  이제 우리는 좀 더 이해할 것입니다.  I\n우리가 개발 중일 때, 우리는 언제 진전이 있는지 알 수 있다고 이야기했습니다.\n더 많은 코드를 만들고, 더 많은 기능을 추가하고, 소프트웨어가 더 많은 일을 할 수 있기 때문입니다.\n소프트웨어가 더 많은 일을 할 수 있기 때문입니다.")]),e._v(" "),t("p",[e._v("디자인할 때 우리는 무엇을 만들고 있을까요?  한 가지 말씀드리겠습니다.\n디자인에 대해 생각하는 한 가지 방법은 이해를 창출하는 것입니다.  여러분은\n이해를 확장하고 있습니다.  활동의 원동력은 다음과 같아야 합니다.\n이해의 확장입니다.")]),e._v(" "),t("p",[e._v("두 가지 질문을 각각 하나씩 가져와서 하나는\n상태 질문입니다.  그렇죠?  지금 우리는 무엇을 알고 있나요?  두 축 모두에 대해\n두 축 모두에 대해?")]),e._v(" "),t("p",[e._v("그리고 다른 하나는 우리가 다음에 무엇을 하고 싶은가?  그리고 우리는\n다음에 무엇을 하고 싶은지, 다음에 무엇을 알고 싶은지, 다음에 무엇을 이해하고 싶은지.\n다음에 무엇을 알고 싶은지, 다음에 무엇을 이해하고 싶은지.")]),e._v(" "),t("p",[e._v("이 프레임워크가 멋진 이유는 바로 이 때문입니다,\n왓슨 신부는 우리에게 항상 이런 질문을 반복해서 던졌습니다.\n계속 반복해서요.  이 프레임은 언제든 꺼내서 이렇게 말할 수 있습니다:\n나는 어디에 있는가?  내가 무엇을 알고 있는가?  내가 알아야 할 것은 무엇인가?  내가 무엇을\n어떻게 하고 싶은가?  그리고 디자인의 여러 단계에 대해 이야기하면서\n디자인의 여러 단계에 대해 이야기하면서 이 프레임이 여러 번 반복해서 사용될 수 있다는 사실을\n그리고 계속.")]),e._v(" "),t("p",[e._v("여기서 간단히 말씀드리고 싶은 또 다른 사항은 다음과 같습니다.\n반성적이라는 것입니다.  당신은 당신의 생각에 대해 생각하고 있습니다.  이것은\n매우 중요합니다.  자신이 무슨 생각을 하고 있는지 인식하는 것은\n생각하는 데 도움이 됩니다.  또한 배경 사고를 의제화하는데도 도움이 됩니다.  그래서\n성찰이 되는 곳입니다.  그래서 우리는 이것을 반성적 질문이라고 부릅니다.")]),e._v(" "),t("p",[e._v("So we are going to break down these four questions into two axes and\ntwo stages.  One is the understanding axis.  What is happening to our\nunderstanding?  How is our understanding moving forward?  We\nunderstood this much.  Now we are going to understand some more.  I\ntalked about when we are dev-ing, we know when we are getting progress\nbecause we are creating more code, and maybe more features and the\nsoftware can do more things.")]),e._v(" "),t("p",[e._v("When we are designing, what are we creating?  I am going to say one\nway to think about design is that you are creating understanding.  You\nare expanding your understanding.  The driver for activity should be\nexpanding your understanding.")]),e._v(" "),t("p",[e._v("You are going to take the two questions in each thing and say one is a\nstatus question.  Right?  What do we know right now?  What have we got\nin hand, for both axes?")]),e._v(" "),t("p",[e._v("And then the other is: what do we want to do next?  And we are going\nto drive what we do next -- that activity side -- from what we want to\nknow next, what we want to understand next.")]),e._v(" "),t("p",[e._v("And I think what is cool about this is that this framing -- I mean,\nFather Watson asked us these questions all the time, over and over and\nover again.  This is a frame you can take out on any day and say:\nWhere am I at?  What do I know?  What do I need to know?  What do I\nwant to do about it?  And as we talk about the different phases of\ndesign, we will talk about the fact that this framing can be used over\nand over.")]),e._v(" "),t("p",[e._v("The other thing I want to talk about here just briefly is: look at how\nthis is reflective.  You are thinking about your thinking.  This is\nsuper important.  Being aware of what you are thinking about helps you\nthink.  It also helps agenda-ize your background thinking.  So that is\nwhere it becomes reflective.  So we will call this reflective inquiry.")]),e._v(" "),t("p",[e._v("[Time 0:16:42]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Technique: PM Top Story/ticket\n\n    Several design techniques contribute to your 'top' story in PM\n\nLooking to always create structured stories with sections for:\n\n  Title\n\n  Description\n\n  Problem Statement\n\n  Approach\n\n_Design stories_ contribute to _building a 'top' story_\n")])])]),t("p",[e._v('이 최고 티켓에 기부하는 방법에 대해 자세히 알아보기 전에 잠깐 이야기하고 싶습니다.\n이 상위 티켓에 기여하는 것에 대해 이야기할 것입니다.  사람들이 겪는 어려움 중 하나는\n제가 발견한 어려움 중 하나는 사람들이 프로젝트 관리 시스템을\n프로젝트 관리 시스템을 가지고 있으면서 "우리는 무언가를 만들 거야."라고 생각한다는 것입니다.\n그리고 티켓을 작성하기 시작합니다.  그리고 티켓을 작성하기 시작합니다.\n아직 뭘 하고 있는지 모르잖아요.  어떻게 티켓을 작성할 수 있겠어요?  그리고 어떻게\n티켓의 내용을 어떻게 알 수 있겠어요?"')]),e._v(" "),t("p",[e._v('그리고 어떤 티켓이 될 것인지에 대한 티켓이 있어야 합니다.\n티켓에는 "이것이 가장 중요한\n계획입니다."  그리고 중요한 것은 그 티켓이 첫 번째 티켓도 아니고\n티켓도 아니고 마지막 티켓도 아닙니다.  그것은 일종의 초기 티켓입니다.\n"무슨 일이 일어나고 있는지 잘 이해한 상태에서,\n이것이 우리의 의제입니다."')]),e._v(" "),t("p",[e._v("하지만 이 티켓이 나오기 전에는 다음과 같은 디자인 작업을 수행해야 합니다.\n초기 스토리에 기여하는 디자인 작업을 해야 합니다: 우리에게는 미션이 있습니다.  우리\n문제를 이해합니다.  우리는 그 문제를 해결할 것입니다.  이것이 바로\n우리가 취할 접근 방식이며, 이것이 우리가 그것을 할 방법입니다.")]),e._v(" "),t("p",[e._v("모든 스토리에는 이 네 가지 섹션이 있어야 한다고 생각합니다.  잠시 후에 더 자세히\n자세히 설명하겠습니다.  제목입니다.  상황에 대한 설명\n상황.  문제 진술에 대해 더 자세히 설명하겠습니다.  그리고\n그리고 결국에는 설계를 마친 후, 어떤 접근 방식을 취할 것인지\n접근 방식이 결정됩니다.")]),e._v(" "),t("p",[e._v("그래서 제가 톱 스토리에 기여하는 스토리에 대해 이야기할 때는\n초기 디자인 스토리를 말하는 거죠?  우리는 디자인 활동을\n디자인 활동을 의제화한다고 했습니다.  하지만 우리는 초기 스토리를\n초기 스토리를 만들 것입니다.  이 스토리들은 앞으로 나아갈\n스토리에 기여할 것이며, 이는 앞으로 나아가기 위한 일종의 리드 스토리가 될 것입니다.")]),e._v(" "),t("p",[e._v('I just want to talk a little briefly here before we dig into the steps\nthat I will be talking about contributing to this top ticket.  One of\nthe challenges I find people have is they have these project\nmanagement systems, and they are like, "We are going to make a thing."\nAnd they start writing tickets.  And it is like, "You have no idea\nwhat you are doing yet.  How could you write a ticket?  And how could\nyou even know what your tickets are supposed to be?"')]),e._v(" "),t("p",[e._v('And you need to have a ticket for what your tickets are going to be.\nYou need to have a ticket that says, "This is what the overarching\nplan is."  And the thing is that ticket, it is neither the first\nticket, nor is it the last ticket.  It is sort of an early ticket, the\ntop story, that says, "With a good understanding of what is going on,\nthis is our agenda."')]),e._v(" "),t("p",[e._v("Before that ticket, though, you should be doing some design work that\ncontributes to the initial story to saying: We have a mission.  We\nunderstand the problem.  We are going to take it on.  This is the\napproach we are going to take, and this is how we are going to do it.")]),e._v(" "),t("p",[e._v("I think all stories should have these four sections.  I will talk more\nin detail about them in a second.  A title.  A description of the\nsituation.  A problem statement, which we will talk about more.  And\nthen eventually, after you have done some design, the approach you are\ngoing to take to doing it.")]),e._v(" "),t("p",[e._v("So when I talk about stories contributing to the top story, I am\ntalking about early design stories, right?  We said we want to\nagendaize design activity.  But we are going to have early stories\nthat are about doing design.  They are going to contribute to a top\nstory, which will be sort of your lead story to move forward.")]),e._v(" "),t("p",[e._v("[Time 0:18:12]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Example: Story\n\nSupport Java Streams in Clojure's seq function\n\nDescription\n\nAs Java Streams become more pervasive, users struggle with being\nunable to process them using Clojure's standard library, which does\nnot accept them.\n\nProblem\n\nJava Streams are not seqs, nor do they implement any interfaces to\nwhich Clojure already bridges, thus are not accessible to Clojure's\nfunctional operations.  Furthermore, they are stateful and not\nfunctional, and require special handling.\n\nApproach\n\nJava streams are stateful (like iterators) but we need the ability to\nseq (like `iterator-seq` which caches from stateful iteration),\nreduce, and into from a stream.  Once we have that, we can leverage\nexisting Clojure seq/transducer tech to manipulate stream.\n\nCreate:\n\n+ Reduce support via `Stream.reduce`, needs BinaryOperator (see\n  functional interfaces story)\n\n+ `stream-seq!` similar to `iterator-seq` - creates a seq as it reads\n  stream\n\n+ `into` support via new `stream-into!` - implemented with Collector,\n  and utilizing transients etc.  Note these will be 'terminal'\n  functions on the Stream.\n\nPlanning Sheet: https://docs.google.com/spreadsheets/d/1gmVNHCa6\n[portion redacted] 3dy_-TcE/edit#gid=1073327933\n")])])]),t("p",[e._v("알겠습니다.  이것은 예시입니다. 죄송하지만 이것은 예시가 아닙니다.\n스토리입니다.  그냥 괜찮은 형태의 스토리의 예시일 뿐입니다.  저기\n사람들이 이야기하는 것이 있습니다.  Java를 사용할 수 있으면 좋겠어요.\n스트림을 사용할 수 있었으면 좋겠다고요.")]),e._v(" "),t("p",[e._v("세상의 상황에 관한 설명은 무엇이 잘못되었는지에 대해\n반드시 무엇이 잘못되었는지에 대해 이야기하지 않습니다.")]),e._v(" "),t("p",[e._v("문제는 도전이나 장애물이 무엇인지에 대해 이야기하는 것입니다.\n그것에 대한.")]),e._v(" "),t("p",[e._v("그리고 접근 방식.")]),e._v(" "),t("p",[e._v("이 강연에서는 이 모든 것들에 대한 세부 사항을 파헤칠 것입니다.  하지만\n이것이 바로 스토리입니다.  그리고 가장 중요한 이야기는 다음과 같을 것입니다.\n가장 중요한 목표에 관한 것입니다.")]),e._v(" "),t("p",[e._v("All right.  So this is an example -- sorry, this is not an example top\nstory.  It is just an example of a story with a decent shape.  There\nis this thing people are talking about.  I wish I could use Java\nstreams in Clojure seq functions.")]),e._v(" "),t("p",[e._v("The description, which is about the situation in the world, without\nnecessarily talking about what is wrong.")]),e._v(" "),t("p",[e._v("The problem, which is talking about what the challenge or obstacle is\nto that.")]),e._v(" "),t("p",[e._v("And then the approach.")]),e._v(" "),t("p",[e._v("This talk is going to dig into the details of all these things.  But\nthat is what a story is.  And the top story will look like this, but\nit will be about the overarching objective.")]),e._v(" "),t("p",[e._v("[Time 0:18:48]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Design Progress\n\n          _measured by increasing understanding_\n                of the truth of the world\n            and your opportunities within it\n\ndecisions made _and why_\n\n  not checking off some process/method or design artifact list\n\n  or making a plan from your first idea\n")])])]),t("p",[e._v("알겠습니다.  이미 말씀드린 적이 있습니다.  디자인 진행 상황,\n이해도를 높이는 측면에서 측정하고\n우리가 내린 결정을 추적하는 것, 그리고 중요한 것은 그 이유입니다.")]),e._v(" "),t("p",[e._v('중요한 것은 이것이 체크리스트 같은 것이 아니라는 것입니다.  저는\n제가 열거하고 있는 활동 중 어떤 활동도\n필요하거나 집에 돌아와서 목록에 넣어야 한다고 말하는 것이 아닙니다.\n그런 다음 "우리는 이것들을 체크함으로써 리치 히키 디자인을 할 것입니다.\n이것들을 체크해서 리치 히키 디자인을 할 거야."')]),e._v(" "),t("p",[e._v("그게 아닙니다.  여러분은 이 중 어떤 것이든 할 것입니다.\n자신의 이해를 발전시키기 위해 말이 되는 것은 무엇이든 해야 합니다.")]),e._v(" "),t("p",[e._v("All right.  So I sort of talked about this already.  Design progress,\nwe are going to measure in terms of increasing our understanding, and\ntracking the decisions we made, but importantly why.")]),e._v(" "),t("p",[e._v('What is important is that this is not a checklist kind of thing.  I am\nnot going to say that any of the activities I am enumerating are\nnecessary, or that you should put them in a list when you get home and\nthen say, "we are going to do Rich Hickey design by checking off these\nthings."')]),e._v(" "),t("p",[e._v("That is not it.  You are going to do whatever of these things make\nsense in order to move your own understanding forward.")]),e._v(" "),t("p",[e._v("[Time 0:19:23]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Design Phases\n\n    _not everything with any linearity is a 'waterfall'_\n           nor do you want 'iterative development'\n               iterate == Latin for 'do-over'\n              better: incremental - 'grow into'\n\nmore like a hike up the (understanding) mountain, not always up, but trending up\n\nbeing able to name phase 'appearance' helps with 'where are you at?'\nnot monotonic - ok!  _stay open-minded_\n\n  this is when change is cheapest\n\n_be explicit about backtracking_\n")])])]),t("p",[e._v("그래서 저는 디자인의 이러한 전진, 선형성은\n진짜라고 생각합니다.  폭포 개발에 대한 엄청난 반발이 있었어요.\n폭포 개발에 대한 엄청난 반발이 있었습니다.  이 아이디어는\n디자인을 분석하고, 사양을 정하고, 코딩을 한 다음\n제공한다는 생각 말이죠.  끔찍하지 않나요?  끔찍하지 않나요?")]),e._v(" "),t("p",[e._v("정말 끔찍했죠, 한 사람이 이 일을 하는 조직 구조가\n한 사람이 이 일을 하고 다음 사람에게 떠넘겨서\n다음 사람에게 떠넘기고 또 다음 사람에게 떠넘기는 조직 구조가 있었어요.\n그래서 저는 다음과 같은 내용을 전달받았습니다.\n당신이 한 일이 옳지 않다는 것을 알고 있습니까?")]),e._v(" "),t("p",[e._v("하지만 우리는 그것을 아이디어가 아닌 것으로 대체했습니다.\n반복 프로그래밍입니다.  라틴어로 '다시 하다'라는 뜻의 이 단어는 농담이 아닙니다.\n이것이 바로 반복의 의미입니다: \"다시 하다\"라는 뜻입니다.  그리고 저는 do-over\n프로그래밍이 중요하다고 생각하지 않습니다.  저는 그것이 정말 좋은 것을 만드는 방법이라고 생각하지 않습니다.\n만드는 방법이라고 생각하지 않습니다.  점진적이라는 표현이 더 어울릴 것 같습니다.")]),e._v(" "),t("p",[e._v('그래서 우리는 앞으로 나아가고 이해를 높이려고 노력할 것입니다.\n단조롭지 않습니다.  우리는 무언가 좋은 아이디어라고 생각할 것입니다.  우리는\n더 많은 것을 배우고 이렇게 말할 것입니다: "아니야!  그건 좋은\n아이디어가 아니었어."  그리고 다른 경로로 올라갈 것입니다.')]),e._v(" "),t("p",[e._v('하지만 "위상"이라는 단어의 멋진 점은 달의 위상과 같은\n달의 위상과 같은 모양을 뜻합니다.  여러분이 무언가를 한 것처럼\n그 다음에는 다음 단계가 보이는 것처럼요.  내비게이션에\n내비게이션에 프로그래밍을 해놓으면 "앞으로 일어날 모든 일이 여기 있습니다.\n모든 것이 여기에 있습니다."라고 말하는 것과는 다릅니다.  소프트웨어 개발을 위한 내비게이션은 없습니다.\n개발용 내비게이션은 없습니다.')]),e._v(" "),t("p",[e._v("그래서 괜찮습니다.  단조롭지 않습니다.  열린 마음을 유지해야 합니다.  당신\n역추적할 것입니다.  한 가지 말씀드리고 싶은 것은 역추적하고 있다면,\n그렇게 말하세요.  예를 들어 이렇게 말하세요: 이봐요, 우리는 접근 방식이\n작동했습니다.  그래서 몇 가지 구현 세부 사항을 살펴보기 시작했습니다.  우리는\n또 다른 문제를 발견하거나, 우리가 문제를 제대로 이해하지 못했거나\n문제를 발견했거나 의도한 대로 구현할 수 없다는 것을 알게 되었습니다.  이제 우리는\n이전 단계로 돌아가서 다른 방법을 찾아보려고 합니다.\n장애물이 있었기 때문입니다.")]),e._v(" "),t("p",[e._v("So I do think that this moving forward, this linearity, of design is a\nreal thing.  There is this tremendous pushback, or there was a\ntremendous pushback, against waterfall development.  This idea that\nyou analyze your design, you spec, you code the thing, and then you\ndeliver.  And isn't that horrible?  Isn't that awful?")]),e._v(" "),t("p",[e._v("And it was awful, because I think there were organizational structures\nput in place that had one person doing this part, and then dumping on\nthe next person who did this part, and then dumped on the next person.\nSo I get handed this thing that was like: do you realize all these\nthings about what you did were not right?")]),e._v(" "),t("p",[e._v('But we have replaced that with a non-idea, which is this idea of\niterative programming.  And this Latin for "do-over" is not a joke.\nThat is what iterative means: "do over".  And I do not think do-over\nprogramming is a thing.  I do not think that is a way to make anything\nthat is really good.  Incremental is probably a better word.')]),e._v(" "),t("p",[e._v('So we are going to try to move forward and increase our understanding.\nIt is not monotonic.  We will think something is a good idea.  We will\nlearn some more stuff, and we will say: "Nope!  That was not a good\nidea."  And we will we will try another route up.')]),e._v(" "),t("p",[e._v('But the the cool thing about the word "phase" is that it means\nappearance, like phases of the moon.  Like you you did something, and\nthen you saw the next thing, you saw the next step.  It is not like\nyou programmed it into your nav and it said, "Here is everything that\nis going to happen in your future."  There is no nav for software\ndevelopment.')]),e._v(" "),t("p",[e._v("So it is OK.  It is not monotonic.  You want to stay open-minded.  You\nwill backtrack.  The one thing I will say is: if you are backtracking,\n"),t("em",[e._v("say so")]),e._v(".  So like say: Look, we thought we had an approach that\nworked.  We started to look at some of the implementation details.  We\nfound another problem, or we found that we did not really understand\nthe problem, or we cannot do what we intended.  And now we are going\nback to a prior phase, where we are going to try to find a different\napproach, because there were obstacles in our way.")]),e._v(" "),t("p",[e._v("[Time 0:21:30]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('slide title: Phases\n\n"these are words with a D this time"\n\nDescribe (situation)\nDiagnose (possible problems)\nDelimit (the problem you are going to solve)\nDirection (strategy, approach)\nDesign (tactics, implementation plan)\nDev (build it)\n\nat any time:\n\n  Decide (to do, or not)\n')])])]),t("p",[e._v("킹 크림슨을 언급하면 추가 점수를 받을 수 있습니다.  누구 킹 크림슨에 대한\n킹 크림슨 참조하신 분?  좋아요.  정말 낮은 확률이었어요\n낮은 확률이었어요")]),e._v(" "),t("p",[e._v("[밴드 '킹 크림슨'의 노래 '엘리펀트 토크'에 나오는 대사 중 하나는\n대사 중 하나가 \"이번엔 D가 붙은 단어야\"입니다.]")]),e._v(" "),t("p",[e._v("알았어요.  그래서 저는 지금 이것들을 세분화하지 않겠습니다.\n이 대화는 설명, 진단, 구분, 문제, 방향을 선택하는\n문제, 높은 수준에서 방향 선택, 선택, 선택\n구현 세부 사항으로 세부 사항을 선택한 다음 실행합니다.")]),e._v(" "),t("p",[e._v('한 가지 중요한 점은 이러한 단계가 서로 연결되는\n서로 이어진다는 것입니다.  하지만 가장 중요한 수준에서는 항상\n"결정"을 할 가능성이 있습니다.  그리고 이 경우, 제가 말하는\n"결정"이란 범위 지정에 대해 이야기하는 것입니다.')]),e._v(" "),t("p",[e._v('문제가 발생했을 때 어느 정도 수준의\n문제를 이해하고 "우리는 그것에 대해 아무것도 하지 않을 것입니다."라고 말했을 수 있습니다.\n또는 다양한 접근 방식이 무엇인지 살펴본 결과\n어떤 접근법도 문제의 80퍼센트 이상은\n문제.  그리고 "나머지 20%에 대해서는 우리가\n하지 않겠습니다."  또는 누군가가 당신의 프로젝트에 대한\n"알았어요.  그럼 그렇게 하죠!"라고 말할 것입니다.')]),e._v(" "),t("p",[e._v("따라서 이러한 결정에는 순서가 정해져 있지 않습니다.  여러분은\n언제든 결정을 내릴 준비가 되어 있어야 합니다.")]),e._v(" "),t("p",[e._v("So extra points for the King Crimson reference.  Did anybody get the\nKing Crimson reference?  All right.  That was a low that was a low\nprobability.")]),e._v(" "),t("p",[e._v('[The band "King Crimson" has a song "Elephant Talk" where one of the\nlines is "These are words with a D this time"]')]),e._v(" "),t("p",[e._v("All right.  So I am not going to break these down now, because this\ntalk breaks down all these things: describing, diagnosing, delimiting\nthe problem, choosing a direction at a high level, choosing\nparticulars as implementation details, and then doing it.")]),e._v(" "),t("p",[e._v('The one thing is that I do think that these are phases that kind of\nlead into one another.  But on an overarching level, there will always\nbe the potential to do "deciding".  And in this case, when I am saying\n"deciding" I am talking about scoping.')]),e._v(" "),t("p",[e._v('You may encounter a problem, and you have required some level of\nunderstanding of it and said, "We are not doing anything about that."\nOr you have gone through and seen what the various approaches are, and\nfound that no approach will cover more than 80 per cent of the\nproblem.  And you are going to say, "That other 20 per cent we are not\ngoing to do."  Or somebody is going to tell you there is no money for\nyour project, and you will say, "All right.  Well, that is that!"')]),e._v(" "),t("p",[e._v("So this deciding does not have a spot in the order.  You are going to\nbe ready to make decisions, hopefully, at any time.")]),e._v(" "),t("p",[e._v("[Time 0:22:46]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Phase: Describe\n\n                     _the situation_\n                   bug/failure reports\n      feature requests, external and internal (backlog)\n                         context\n\n_What do you know?_ something seems wrong/obstructive in the world\n_What do you need to know?_ the extent of it\n\n_Where are you at?_ observing, listening\n_Where are you going?_\n- initial story title\n- _write down_ a Description in top story\n")])])]),t("p",[e._v("따라서 '설명'은 말 그대로 무언가를 적는다는 의미입니다.  그리고\n디자인의 첫 번째 단계는 바로 듣는 것을 기록하는 것입니다.\n사용자는 무엇이든 불만을 제기합니다.  Slack의 사람들은 X를 원합니다.\n다들 Clojure가 형편없다고 하죠.  그게 뭐든 간에요.  여러분은\n무언가를 듣고 있고, 그것을 포착하고 싶을 뿐입니다.  어쩌면 여러분은\n시스템에서 실패를 보았을 수도 있습니다.  어쩌면 당신이 지금 시도하고 있는 것이\n버그와 관련이 있을 수도 있습니다.  그래서 버그 보고서가 있습니다.  그래서\n예외 스택 추적이 있거나 프로덕션 시스템의 로그가 있습니다.\n로그가 있을 수도 있습니다.")]),e._v(" "),t("p",[e._v("그건 중요하지 않습니다.  여기서 여러분이 할 일은 그저\n모든 것을 기록하는 것입니다.  더 많은 로그를 수집할 수도 있습니다.  어쩌면 정보를 얻기 위해\n정보를 얻기 위해 사람들과 더 많은 대화를 나눌 수도 있습니다.")]),e._v(" "),t("p",[e._v("그래서 당신은 무엇을 알고 있나요?  세상에 뭔가 문제가 있는 것 같습니다.")]),e._v(" "),t("p",[e._v("무엇을 알아야 할까요?  얼마나 큰 문제인지 알아야 합니다.\n저거요?  어디에서 발생했나요?  어떤 영향을 미치는가?  그런 것들.")]),e._v(" "),t("p",[e._v("당신은 무엇을 하고 있나요?  당신은 관찰하고 듣고 있습니다.")]),e._v(" "),t("p",[e._v("그리고 어디로 가고 있습니까?  여러분은 이로부터 두 가지를 만들어내려고 합니다.\n첫 번째 이야기, 첫 번째 이야기, 첫 번째 이야기의 제목입니다.  그리고 또한\n그에 대한 설명 단락도 작성해야 합니다.")]),e._v(" "),t("p",[e._v('So "describing" literally just means to write things down.  And the\nvery first phase of design is just to write down what you are hearing.\nUsers are complaining about whatever.  People in Slack want X.\nEverybody says Clojure sucks because blah.  Whatever it is.  You are\nhearing things, and you just want to capture that.  Maybe you have\nseen failures in the system.  Maybe what the thing that you are trying\nto take on now has to do with a bug.  So you have a bug report.  So\nyou have exception stack traces or you have logs from production\nsystems.')]),e._v(" "),t("p",[e._v("It does not matter.  What you are going to be doing here is just\nwriting it all down.  Maybe having more logs gathered.  Maybe having\nmore conversations with people to get the information.")]),e._v(" "),t("p",[e._v("So what do you know?  Something seems wrong with the world.")]),e._v(" "),t("p",[e._v("What do you need to know?  You need to know: how big a problem is\nthat?  Where is it?  What are its impacts?  Things like that.")]),e._v(" "),t("p",[e._v("What you are doing?  You are observing and you are listening.")]),e._v(" "),t("p",[e._v("And where are you going?  You are trying to produce two things out of\nthis: an initial story, that top story, the title for that.  And also\nthe description paragraph for that.")]),e._v(" "),t("p",[e._v("[Time 0:23:55]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Technique: Description\n\n                  _one paragraph summary_\n                     situation/context\n               symptoms/reports/observations\n                          requests\n\n_don't_:\n\n  say what the problem is\n\n  accept as facts assertions that imply what the problem is\n\n    instead: X says Y\n")])])]),t("p",[e._v("그래서 설명 단락.  한 단락이어야 합니다.  그것은\n자신이 처한 상황, 증상 또는 그 문제\n보고서.  그 모든 것들.  당신은 단지 그것들이 무엇인지에 대한 높은 수준의\n파악하고 싶을 뿐입니다.  세부 사항을 가리킬 수 있습니다.")]),e._v(" "),t("p",[e._v('여기서 가장 중요한 것은 문제가 무엇인지 지금 당장\n지금 문제가 무엇인지 말하지 않는다는 것입니다.  "머리가 아파요."라고 말하는 것이죠.  당신은\n"뇌종양이 있기 때문에"라고 말하는 것이 아닙니다.\n종양일 수도 있고, 오늘 물을 충분히 마시지 않았을 수도 있고, 안경 처방이 잘못되었을 수도 있습니다.\n처방이 잘못되었을 수 있습니다.')]),e._v(" "),t("p",[e._v('그런 말이 아닙니다.  당신은 "환자가 두통이 있습니다.\n두통이 있습니다."  따라서 문제가 무엇인지 말하지 않습니다.  당신은 무엇을 말합니까?\n증상, 불만 사항 등을 말해야 합니다.')]),e._v(" "),t("p",[e._v("누군가가 문제를 포함하는 것 같은 불만을 제기하는 경우, 그것을 사실로 받아들이지 마십시오.\n그것을 사실로 받아들이지 마세요.  그냥 이렇게 말하세요.\n문제라고 말했습니다.")]),e._v(" "),t("p",[e._v("좋아요.  그리고 우리는 그 내용을 톱 스토리에 기록할 것입니다.")]),e._v(" "),t("p",[e._v("So description paragraph.  It should just be a paragraph.  It should\nbe the situation you find yourself in, the symptoms, or those problem\nreports.  All those things.  You just want to capture the high level\nview of what they are.  You can point to the details.")]),e._v(" "),t("p",[e._v('The very important thing about this is that you are not saying right\nnow what the problem is.  This is, "I have a headache."  You are not\nsaying, "Because I have a brain tumor", because you could have a brain\ntumor, or you could have not had enough water today, or your eyeglass\nprescription could be wrong.')]),e._v(" "),t("p",[e._v('That is not what you are saying.  You are saying, "patient has a\nheadache."  So you just do not say what the problem is.  You say what\nthe symptoms are, what the complaints are, and things like that.')]),e._v(" "),t("p",[e._v("If somebody has a complaint that seems to incorporate the problem, do\nnot accept that as a fact.  Just say: somebody said they think this is\nthe problem.")]),e._v(" "),t("p",[e._v("OK.  And we are going to write that down in our top story.")]),e._v(" "),t("p",[e._v("[Time 0:24:51]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Phase: Diagnose\n\n         'know across' possible problem(s), of two kinds\n\n1 - bugs/defects\n- yes bugfixes need design (or revisions of a design)\n- lest you just play symptom/code whack-a-mole\n2 - features\n\n_What do you know?_ the symptoms/context\n_What do you need to know?_ the cause(s)\n\n_Where are you at?_ have good description, evidence\n_Where are you going?_\n- applying logic and experimentation\n- to explicate 'unfold'\n")])])]),t("p",[e._v('다음 단계는 문제를 진단하는 것입니다.  그리고 "진단", 또 다른\n훌륭한 단어입니다.  라틴어가 아닙니다.  그리스어이며 "알다"를 의미합니다.\n가로 질러".  그 건너편은 "대각선"또는 "직경"과 같은 "dia"부분입니다.\n"직경".  같은 어근입니다.  "코"는 "알다"입니다.  다시 말하지만, 방금 찾아봤는데\n찾아봤는데, 이런 뜻이라는 게 정말 멋졌어요.\n이것이 교차점이라고 생각합니다.  이것은 가능한 한 세트의 앎에서\n한 세트의 앎에서 다른 세트의 앎으로의 이동입니다.')]),e._v(" "),t("p",[e._v("그리고 두 가지 종류의 문제가 있습니다.  저는 우리가\n이 두 가지에 대한 디자인에 대해 이야기하고 있습니다.  한 가지 문제는\n무언가가 고장 났는데 이를 고치려고 하는 경우입니다.")]),e._v(" "),t("p",[e._v("또 다른 종류의 문제는 사람들이 어떤 기능을 원하거나, 여러분이 원하는 기능이나\n기능 또는 누군가가 어떤 기능에 대해 이야기한 것입니다.  그리고 다행히도 그\n기능은 문제에 관한 것입니다.  따라서 기능에서 문제점으로 이동해야 합니다.\n문제.")]),e._v(" "),t("p",[e._v("그래서 무엇을 알고 있나요?  증상과 맥락을 알고 있습니다.  즉\n바로 당신이 방금 한 일입니다.")]),e._v(" "),t("p",[e._v('무엇을 알아야 하나요?  원인을 알아야 합니다.  이제 우리는\n가서 "좋아.  두통이 있으시군요.  여기\n두통이 있을 수 있는 다섯 가지 이유입니다."')]),e._v(" "),t("p",[e._v("좋은 설명이군요.  전에는 그렇게 하셨죠.  그리고 당신은\n이전에 수집한 증거가 있습니다.")]),e._v(" "),t("p",[e._v("그리고 당신이 가고있는 곳은 무엇이 문제인지 알아 내려고 노력할 것입니다.\n문제가 무엇인지 알아내는 것입니다.")]),e._v(" "),t("p",[e._v('The next phase is to diagnose the problem.  And "diagnosis", another\ngreat word.  It is not Latin.  It is Greek, and it means "to know\nacross".  That across is the "dia" part, like "diagonal" or\n"diameter".  Same root.  "nose" is "to know".  Again, I just looked it\nup, and it was super cool that this is what it meant, because I do\nthink that this is a crossing.  This is a movement from one possible\nset of knowing to another set of knowing.')]),e._v(" "),t("p",[e._v("And there is two kinds of problems.  I am going to say that we are\ntalking about design for both of these.  One kind of problem, though,\nis: your thing is broken and you are trying to fix it.")]),e._v(" "),t("p",[e._v("Another kind of problem is that people want a feature, or you want a\nfeature, or somebody talked about some feature.  And hopefully that\nfeature is about a problem.  So you need to go from the feature to the\nproblem.")]),e._v(" "),t("p",[e._v("So what do you know?  You know the symptoms and the context.  That is\nwhat you just did.")]),e._v(" "),t("p",[e._v('What do you need to know?  You need to know the cause.  So now we are\ngoing to go and say, "All right.  Well, you have a headache.  Here is\nfive reasons why you might have a headache."')]),e._v(" "),t("p",[e._v("So you have a good description.  That is what you did before.  And you\nhave the evidence that you collected before.")]),e._v(" "),t("p",[e._v("And where you are going is: you are going to try to figure out what\nthe problem is.")]),e._v(" "),t("p",[e._v("[Time 0:26:14]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Diagnose: Bugs\n\n         symptom -> possible problems -> (likely) problem\n\nhypotheses (more than one)\n\npick one (how?)\n\n  use logic first (to rule out)\n\n  'most likely' (intuition)\n\n  makes the problem space smallest (divide and conquer)\n\nUse the scientific method\n")])])]),t("p",[e._v("그래서 저는 이것을 두 부분으로 나누어 설명하겠습니다.  버그를 진단하는 것은\n증상에서 여러 가지 가능한 문제를 파악하고\n마지막으로 무엇이 실제로 잘못되었는지를 파악하는 것입니다.  그것은 바로 안경\n처방이 잘못되었습니다.  더 좋은 안경이 필요합니다.  그렇기 때문에\n항상 두통이 있습니다.")]),e._v(" "),t("p",[e._v('따라서 하나 이상의 가설이 있을 것입니다.  이 "하나 이상", 그것은 항상 나타날 것입니다.\n하나", 그것은 항상 나타날 것입니다.  디자인은 생각하지 않습니다\n한 가지를 생각한 다음 그것을 쓰는 것이 아닙니다.  그것은 디자인이 아닙니다.  디자인\n은 하나 이상의 것을 생각하는 것입니다.  여러분이 가져야 할 첫 번째\n한 가지라고 생각되면 두 번째를 생각해보세요.\n두 번째를 생각하세요.  두 번째 가능한 이유를 생각해 보세요.  팀에 있다면\n팀이라면 모두가 이유를 생각해 보도록 하세요.  물론, 만약 여러분이\n마지막에 가고 싶지 않은 게임을하고 있다면 ...')]),e._v(" "),t("p",[e._v('그리고 나서 그 이유를 말해야 합니다.  그리고 제가 여기서 한 가지\n한 번에 하나씩 해결하세요.  다시 말해,\n이러한 것들을 한 번에 하나씩 탐색하세요.  사람들은 무엇이 잘못되었는지에 대해 많은 아이디어를 얻을 것입니다.\n무엇이 잘못되었는지에 대해 "시스템이 무너지고 있는 것 같아요.\n다운되는 것 같아요.  예외가 발생하고 있습니다.  저도 그렇게 생각합니다: 코드에\n코드에 버그가 있습니다.  라이브러리 코드에 버그가 있습니다.  버그가 있습니다.\n버그가 있습니다.  태양 플레어입니다."  그런 다음 코드에 있거나\n이 모든 가능한 것들을 찾기 위해 무언가를 실행합니다.')]),e._v(" "),t("p",[e._v("그렇게 하지 마세요.  하나를 선택해야 합니다.")]),e._v(" "),t("p",[e._v('이제 논리가 도움이 됩니다.  때로는 가능성을 살펴보고\n"저건 아닐 거야"라고 말할 수 있습니다.  당신은 안경을 쓰지 않으므로\n...  하지만 안경을 써야 할지도 모르죠."  그래서 우리는 논리를 사용하여\n배제할 수 있습니다.')]),e._v(" "),t("p",[e._v("그리고 여러 가지가 있습니다.  저는 이것들을 너무 깊이 파헤치지는 않겠습니다.\n너무 깊게 파고들지는 않을 거예요.\n한 시간이 걸리기 때문입니다.  하지만 직감으로 인해 가장 가능성이 높거나\n직관으로 인해, 또는 가장 많은 증거를 가지고있는 것입니다.\n증거.  이런 것 같습니다.  모든 증거가 가리키는 것 같습니다\n직관의 관점에서 보면요.")]),e._v(" "),t("p",[e._v('여기서 가장 강력한 도구 중 하나는 문제 공간을 작게 만드는 것입니다.\n문제 공간을 작게 만드는 것입니다.  가설 중 하나가 문제 공간을 더 작게 만든다면\n공간을 더 작게 만든다면, 그것은 종종 초기에 탐색하기에 좋은 것입니다.  저는\n함께 일하는 프로그래머들에게 종종 "이 문제를 더 작은\n컨텍스트에 넣으세요."')]),e._v(" "),t("p",[e._v("시스템에 문제가 있다고 가정해 봅시다.  여러분의 프로덕션 시스템은 다음과 같습니다.\n커다란 털북숭이 괴물입니다.  이 작은 코드만으로 이 문제를 재현할 수 있을까요?\n이 문제를 재현할 수 있나요?  코드를 전혀 사용하지 않고 재현할 수 있나요?  만약\n라이브러리일 수 있습니다.  알고리즘의 결함일 수도 있다고 생각한다면\n알고리즘 결함일 수 있습니다.  클로저 코드를 조금만 작성해서\n코드를 작성해서 재현할 수 있을까요?")]),e._v(" "),t("p",[e._v("So I will take these in two different parts.  Diagnosing bugs is a\nknowing across from a symptom to maybe multiple possible problems, and\nfinally down to what is actually wrong.  It is: your eyeglass\nprescription is off.  You need better glasses.  That is why you are\ngetting headaches all the time.")]),e._v(" "),t("p",[e._v('So you will have hopefully more than one hypothesis.  This "more than\none", it is going to come up all the time.  Design is not thinking of\none thing and then writing it out.  That is not designing.  Designing\nis about thinking of more than one thing.  That is like the first\nskill you should have is: if you think it is one thing, just think of\na second thing.  Think of a second possible reason.  If you are on a\nteam, have everybody try to think of a reason.  Of course, if you are\nplaying that game you do not want to go last, so ...')]),e._v(" "),t("p",[e._v('And then you are going to need to address them.  And the one thing I\nwould say here is: address them one at a time.  In other words,\nexplore these things one at a time.  People will get a bunch of ideas\nabout what is wrong and they are like, "I think the system is falling\ndown.  We are getting this exception.  I think it is either: We have a\nbug in our code.  There is a bug in the library code.  There is a bug\nin the JVM.  Solar flares."  And then they will be in the code, or\nrunning something looking for all these possible things.')]),e._v(" "),t("p",[e._v("Just do not do that.  You need to pick one.")]),e._v(" "),t("p",[e._v('Now logic helps you here.  Sometimes you can look at the possibilities\nand say, "You know, it cannot be that.  You do not wear glasses, so\n...  Although, maybe you should."  So we can use logic to rule stuff\nout.')]),e._v(" "),t("p",[e._v("And then there is a bunch of things.  I am not really going to dig\ninto any of these too deeply, because every one of them would take an\nhour.  But you will have a thing that may be most likely, either due\nto your intuition, or it is the thing for which you have the most\nevidence.  It seems like this.  All the evidence seems to be pointing\nat that, from our intuition standpoint.")]),e._v(" "),t("p",[e._v('I think one of the most powerful tools you have here is to make the\nproblem space smaller.  If one of your hypotheses makes the problem\nspace smaller, that is often a good thing to explore early.  I am\noften telling programmers that I work with, "Get that into a smaller\ncontext."')]),e._v(" "),t("p",[e._v("You see a problem in your system.  Well your production system is this\nbig hairy monster.  Can you reproduce this problem with just this tiny\npiece of code?  Can you reproduce it not using your code at all?  If\nyou think it might be a library.  You think it might just be an\nalgorithmic snafu.  Can you just write a little piece of Clojure code\non the side and reproduce it there?")]),e._v(" "),t("p",[e._v("[Time 0:28:48]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('slide title: Technique: Scientific Method\n\n               _out of scope for this talk_\n\nformulate a supporting/refuting conjecture\n\ndesign an experiment\n\n_write result template first_\n- "If this sheet were filled in we\'d know X"\n\ncode it, conduct it\n\napply conjecture logic, repeat\n')])])]),t("p",[e._v("그리고 여기서 훌륭한 기술은 과학적인 방법입니다.  스튜가 이에 대해\n이에 대해 좋은 이야기를 해주셨는데 여기서는 하지 않겠습니다.")]),e._v(" "),t("p",[e._v("And a great technique here is the scientific method.  Stu's given a\ngood talk about this, and I am not going to do that here.")]),e._v(" "),t("p",[e._v('[ Stuart Halloway, "Debugging with the Scientific Method", November\n2015\nhttps://github.com/matthiasn/talk-transcripts/blob/master/Halloway_Stuart/DebuggingWithTheScientificMethod.md\n]')]),e._v(" "),t("p",[e._v("하지만 각 가설에 대해 다음과 같은 추측을 세우세요.\n증명하거나 반증하려고 할 것입니다.  여러분은 실험을 설계할 것입니다.\n실험을 설계하고 코드를 작성하게 될 것입니다.")]),e._v(" "),t("p",[e._v('여기서 한 가지 팁을 드리자면, 사람들은 종종 이렇게 말하곤 합니다,\n"이 문제를 해결하려고 합니다."라고 말한 다음 테스트를 실행한다는 것입니다.\n몇 가지 테스트를 실행합니다.  그런 다음 실행한 내용을 요약해야 합니다.  그리고\n그런 다음 요약을 보고 이렇게 말합니다.\n증명하거나 반증하는 데 도움이 되는 정보가 없는 것 같습니다.\n추측입니다."')]),e._v(" "),t("p",[e._v('그래서 제가 드리고 싶은 팁은 실험을 하려고 한다면\n실험을 하려는 경우, 실험을 테스트하는 코드를 작성하기 전에 바로 다음에 해야 할 일은\n실험을 테스트하는 코드를 작성하기 전에 이 스프레드시트 또는\n템플릿을 작성하는 것입니다.\n여기에 결과를 넣을 것입니다."라는 스프레드시트나 템플릿을 작성하는 것입니다.  여기에는\n열이 있고, 열이 있고, 행이 있습니다.  그리고\n이 템플릿을 보고 "그래, 그거 알아?  만약\n이걸 작성하면 이 추측을 수행하기 위해 필요한 모든 것을 알 수 있을 거예요.\n이 추측을 하는 데 필요한 모든 것을 알 수 있을 거야."')]),e._v(" "),t("p",[e._v("그런 다음 해당 템플릿의 값을 제공할 수 있는 프로그램을 작성하세요.\n템플릿을 작성하세요.  탐색적인 코드를 작성하고 나서 왜 필요한 답을 얻지 못했는지 궁금해하지 마세요.\n답을 얻지 못했는지 궁금해하지 마세요.")]),e._v(" "),t("p",[e._v("But for each hypothesis you take on, formulate a conjecture that you\nare going to try to prove or disprove.  You are going to design an\nexperiment, which is going to be some code you get to write.")]),e._v(" "),t("p",[e._v('The one tip I would give you here is that frequently people will say,\n"I am trying to figure out this thing", and then they will go and run\nsome tests.  And then they will need to summarize what they ran.  And\nthen you will look at the summary and be like, "I do not think you\nhave got any information that helps us prove or disprove this\nconjecture."')]),e._v(" "),t("p",[e._v('So the tip I would give you is that if you are going to go and run an\nexperiment, the very next thing you should do, before you write the\ncode that tests the experiment, is to write this spreadsheet or the\ntemplate that says, "This is how we are going to display the results.\nThis is where we are going to put the results."  We are going to have\na column for this, a column for that, and rows for these things.  And\nyou want to look at that template and say, "Yeah, you know what?  If\nwe filled this out, we would know everything we need to know to do\nthis conjecture."')]),e._v(" "),t("p",[e._v("And then write a program that can provide the values for that\ntemplate.  Do not exploratory code and then wonder why you did not get\nthe answers that you need to do it.")]),e._v(" "),t("p",[e._v("[Time 0:30:00]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Diagnose: Feature Requests\n\n               _feature: factura: 'making', of an answer_\n                          _not_ the problem\n\n'we don't have feature X' is never a valid problem statement\n\n  recognize and kill all such statements\n\n_feature -> problem(s)_ for what that feature is (one possible) answer\n\n  what is the user's intention/objective? (not how)\n\n  what is in the way?\n")])])]),t("p",[e._v('알겠습니다.  훨씬 더 까다롭고, 훨씬 더 흔하고, 훨씬 더 일반적으로\n필요하지만 훨씬 덜 자주 실행되는 것은 기능 요청에서 실제 문제까지\n기능 요청에서 실제 문제에 이르기까지.  그래서 사람들은\n기능에 대해 항상 "이런 기능이 있었으면 좋겠어요.  저게 있으면 좋겠어요."  여러분도\n여러분도 마찬가지죠?  내부 기능 요청, 백로그, 그리고\n백로그, 그리고 좋은 기능이 될 수 있다고 생각하는 것들이 있습니다.')]),e._v(" "),t("p",[e._v('"우리에게는 X 기능이 없습니다."라는 말은 결코 유효한 문제 진술이 될 수 없습니다.  만약\n이에 대한 증거가 필요하다면 터치스크린이 있는 최신 자동차만 보면 됩니다.\n터치 스크린이 있는 현대 자동차를 보면 됩니다.\n내 차의 송풍기를 설정하기 위해 손가락을 정확한 지점으로 밀어 넣어야 합니다.\n정확한 지점으로 손가락을 밀어야 합니다."  아무도 그런 말을 한 적이 없죠?')]),e._v(" "),t("p",[e._v('하지만 누군가는 "젊은이들은 절대 우리 차를 사지 않을 것이기 때문에 터치 스크린이 필요합니다.\n터치스크린이 필요해요."  이것이 바로 문제에 대해 말하지 않을 때\n이런 일이 벌어집니다.')]),e._v(" "),t("p",[e._v('그래서 우리는 기능 요청에서 그 기능이 하나의 해답이 될 수 있는 문제까지\n그 기능이 하나의 해답이 될 수 있습니다.  그래서 두 가지가 있습니다.\n마법 같은 일이 일어납니다.  하나는 기능에서\n문제.  다른 하나는 하나의 답에서 어쩌면 열린 답의 집합으로\n열린 세트가 된 것입니다.  바로 여기서 디자인을 유연하게 할 수 있습니다.  만약\n누군가가 "토스터기를 만들 때가 되었다"라고만 말한다면,\n문제를 해결하지 못할 수도 있습니다.')]),e._v(" "),t("p",[e._v("따라서 다음은 기능 요청 또는 자신의 기능 아이디어를 가지고\n기능 아이디어를 가져와서 다음과 같이 말해보세요.  그리고 무엇이\n방해가 되나요?")]),e._v(" "),t("p",[e._v('OK.  Much trickier, and much more common, and much much more commonly\nneeded, and much less frequently exercised, is the "knowing across"\nfrom a feature request to the actual problem.  So people ask for\nfeatures always, "I wish you had this.  I wish I had that."  You do\nalso, right?  You have your own internal feature requests, your\nbacklog, and things you thought might be good features.')]),e._v(" "),t("p",[e._v('"We do not have feature X" is never a valid problem statement.  If you\nneed proof of this you only need to look at a modern car which has a\ntouch screen where no one said, "I need to slide my finger on some\nrandom piece of glass to a precise point to set my blower in my car\nwhile I am driving."  No one has ever said that, right?')]),e._v(" "),t("p",[e._v('But somebody did say, "We need touch screens because young people will\nnever buy our cars."  This is what happens when you are not talking\nabout the problem.')]),e._v(" "),t("p",[e._v('So we are trying to get from a feature request, to a problem for which\nthat feature is one possible answer.  So there is two things that\nhappen here that were magical.  One was: you went from feature to\nproblem.  The other is: you went from one answer, to maybe an open set\nof answers.  That is where you get the flexibility to do design.  If\nsomebody\'s just going to cram down "it is time to make the toaster",\nwell you may not be solving a problem.')]),e._v(" "),t("p",[e._v("So here are the exercises to say take the feature request, or your own\nfeature idea, and say: what is your intention here?  And then, what is\nin your way?")]),e._v(" "),t("p",[e._v("[Time 0:31:36]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Phase: Delimit\n\n                  _the problem you are going to solve_\n  you might discover multiple problems or bigger problems during diagnosis\n\n_What do you know?_ what the problem is\n_What do you need to know?_\n- how to state it succinctly\n- its scope\n\n_Where are you at?_ have diagnosis\n_Where are you going?_\n\n  making the problem statement\n")])])]),t("p",[e._v("알겠습니다.  이제 이러한 기능 요청이 문제로 전환되었습니다.\n그리고 문제가 발생하기 전에 한 단계만 더 거치면 됩니다.\n문으로 구분해야 합니다.  이 작업을 수행하면서\n작업을 수행하면서 문제에 대한 개념이 생겼을 수 있습니다.  문제에 대한\n문제에 대한 대화를 나눴을 수도 있습니다.")]),e._v(" "),t("p",[e._v("문제를 구분하는 것은 실제로 다음과 같이 말하기만 하면 됩니다.\n문제에 대해 짧고, 간결하고, 정확하게 이야기할 것인가?\n우리가 해결해야 할 소프트웨어를 만드는 문제에 대해 짧고 간결하고 정확하게 이야기하는 것입니다.")]),e._v(" "),t("p",[e._v("그래서 문제가 무엇인지 알 수 있습니다.  당신은 진단에서\n진단하는 것.  이제 여러분이 하려는 것은 그것을 간결하게 진술하고,\n그리고 범위를 정하는 겁니다.")]),e._v(" "),t("p",[e._v("OK.  So now you have got these feature requests turned into problems.\nAnd you have just one more step, I think, before you have a problem\nstatement, which is to try to delimit it.  As you have done this\nthing, you may have a notion of the problem.  You may have had\nconversations about the problem.")]),e._v(" "),t("p",[e._v("Delimiting the problem is really just a matter of saying: what is the\nshort, concise, precise way we are going to talk about the problem\nthat we are going to take on, making software to solve.")]),e._v(" "),t("p",[e._v("So you know what the problem is.  You sort of did that in the\ndiagnosis thing.  All you are trying to do now is state it succinctly,\nand give it some scope.")]),e._v(" "),t("p",[e._v("[Time 0:32:16]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Technique: Problem Statement\n\n        _Succinct statement of unmet user objectives and cause(s)_\n                    not symptoms/anecdotes/desires\n         not remedy/solution/feature - challenge is to filter out\n\nmodify your top story title from symptom -> problem\nadd Problem after the Description in the top story - link to diagnosis work\n\n_subject to refinement_\n- as your understanding increases\n- don't let your problems statements get stale\n\n            This is the most important artifact you will have.\n   if you don't relentlessly focus on a problem you may make something\n                 that doesn't solve any problem\n")])])]),t("p",[e._v('따라서 문제 진술은 충족되지 않은 목표에 대한 간결한 진술입니다.\n사용자의 의도가 무엇인지, 그리고 그 원인이 무엇인지에 대해 이야기하는 것입니다.  It\n더 이상 증상이 아닙니다.  이 작업은 설명 단계에서 수행했습니다.  그리고\n치료법이 아닙니다.  여전히 우리 앞에 놓여 있습니다.\n그것.  따라서 여전히 존재한다면, "우리가 무엇을 할 것인가"와 같은 일종의 "그것에 대해\n그것에 대해"가 여전히 여기에 존재한다면, 당신은 그것을 제거하고 싶을 것입니다.')]),e._v(" "),t("p",[e._v('문제 진술이 있는 시점에서는 다음과 같이 두 가지를 할 수 있습니다.\n톱 스토리로 두 가지를 할 수 있습니다.  다음을 수행할 수 있습니다.\n수정할 수 있습니다.  첫 번째 스토리 제목은 아마도 "저는\n토스터기가 좋을 것 같습니다."와 같은 제목이었을 것입니다.  이제 "사용자가 캐러멜 처리된\n캐러멜화된 빵을 좋아합니다."  그리고 이를 전달하는 방법은 여러 가지가 있을 수 있습니다.\n전달할 수 있습니다.')]),e._v(" "),t("p",[e._v("따라서 여기서 가장 중요한 스토리의 제목을 수정하여\n제목을 수정합니다.  우리는 누군가에게 다음을 수행할 수 있는 방법을 제공했습니다.\nX.  이제 이 목표가 스토리의 제목이 됩니다.")]),e._v(" "),t("p",[e._v('훌륭합니다.  프로젝트 관리 시스템에서 일할 때는\n"토스터기 만들기.  빵 상자를 만드세요.  아무거나 만들어라."와는 다릅니다.  하지만\n"이 문제를 해결하십시오.  저 문제를 해결해라.  해결해라.\n문제."  그리고 당신이 한 일을 보면, 그 사다리 목록이 훨씬 더 만족스럽습니다.\n기능, 기능, 기능으로만 나열하는 것보다 훨씬 만족스럽습니다,\n기능.')]),e._v(" "),t("p",[e._v("이제 여러분이 해야 할 또 다른 일은 그 상위 스토리에\n다른 것을 추가하는 것입니다.  제목 설명을 작성했습니다.  이제\n이제 그 문제 진술이 있을 것입니다.  이것은 영원하지 않습니다.\n영원하지 않습니다.  여러분은 이것을 다듬어야 합니다.  틀렸을 수도 있습니다.\n틀렸을 수도 있습니다.  나중에 발견하게 될 미묘한 차이를 놓쳤을 수도 있습니다.  그래서\n이것은 유지 관리가 필요한 또 다른 것입니다.  하지만 짧아야 합니다.\n문제가 무엇인지 설명하는 단락이어야 합니다.")]),e._v(" "),t("p",[e._v("이것은 매우 중요합니다.  이것이없고 당신이하지 않으면\n끈질기게 집중하지 않으면, 누군가에게 손가락으로\n누군가가 운전 중에 라디오를 켜기 위해\n라디오를 켜기 위해 운전하는 동안 터치스크린을 손가락으로 밀어야 할 위험이 매우 높습니다.")]),e._v(" "),t("p",[e._v('So a problem statement is this succinct statement of unmet objectives.\nWe are talking about what is the user\'s intention, and the cause.  It\nis not the symptoms any more.  We did that in the Describe phase.  And\nit is not the remedy.  That is still in front of us: what to do about\nit.  So if that still exists, if any sort of, "what we are going to do\nabout it" is still present here, you want to get rid of that.')]),e._v(" "),t("p",[e._v('At the point you have got a problem statement, you are going to be\nable to do two things with your top story.  You are going to be able\nto modify ...  The initial story title was probably something like, "I\nthink a toaster might be a good idea."  And now it is, "The user likes\ncaramelized bread."  And there is maybe more than one way to deliver\nthat.')]),e._v(" "),t("p",[e._v("So you are going to modify the title of your top story here to try to\nmake it about the problem.  We have given somebody a way to accomplish\nX.  It is the objective now that is the name of your story.")]),e._v(" "),t("p",[e._v('This is great.  When you work in a project management system that is\nnot like, "Build toaster.  Build bread box.  Build whatever."  But it\nis like, "Solve this problem.  Solve that problem.  Solve that\nproblem."  And you look at what you have done, that ladder list is way\nmore satisfying than the one that is just: feature, feature, feature,\nfeature.')]),e._v(" "),t("p",[e._v("So the other thing you are going to do is you are going to now add\nanother thing to that top story.  You had the title description.  Now\nyou are going to have that problem statement.  This is not forever and\never and ever.  You are going to refine this.  You may have gotten it\nwrong.  You may have a missed subtlety you will discover later.  So\nthis is another thing that needs maintenance.  But it should be short.\nIt should be a paragraph that says what the problem is.")]),e._v(" "),t("p",[e._v("This is super important.  If you do not have this, and if you do not\nrelentlessly focus on it, you run, I think, a very high risk of asking\nsomebody to slide their finger around on a touchscreen while they are\ndriving in order to turn up the radio.")]),e._v(" "),t("p",[e._v("[Time 0:34:20]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Phase: Direction\n\n                        _strategy, approach_\n                   User's intentions and objectives\n                  High-level approaches to addressing\n   e.g. in-proc/out, lib/app, buy/build, modify/add, automatic/manual etc\n\n_What do you know?_ what the problem is\n_What do you need to know?_\n- the user objectives in more detail\n- the possible approaches\n- the best of these\n- what matters in deciding (criteria)\n")])])]),t("p",[e._v("이제 저는 두 가지에 대해 이야기하려고 합니다.\n전략과 전술입니다.  그리고 저는 여러분이 항상 이런 차별성을 가지거나\n항상이 차별화를 갖거나 당신의 일이 다음과 같이 계층화 될 것입니다.\n하지만 확실히 더 큰 것이라면 두 가지가있을 것입니다.\n단계가 있습니다.")]),e._v(" "),t("p",[e._v("방향을 설정하는 순간이 있을 것이고, 그 다음에는 많은\n구현 결정의 순간이 있을 것입니다.\n비슷한 일을 다른 수준에서, 다른 수준의 세부 사항에 대해\n세부 사항.")]),e._v(" "),t("p",[e._v("따라서 방향 설정 단계에서는 전략에 관한 것입니다.  전략이란\n장군 또는 리더가 되는 것을 의미하며, 근본적으로는 어디로 갈 것인가에 대한\n어디로 가는가?  우리 모두는 그 길을 따라갈 것입니다.")]),e._v(" "),t("p",[e._v("여기서 포착하고 싶은 것은 다음과 같습니다.\n사용자의 의도와 목표 - 방법이 아니라 무엇을 하려는지\n무엇을 하려고 하는지 파악하는 것입니다.  그런 다음 이를 해결하기 위한\n어떤 방법이 있는지 생각해야 합니다.  우리는 이를\n접근 방식이라고 부릅니다.  그리고 이것들은 매우 높은 수준이며, 여기서 모든 방법을\n여기서 모두 열거하려는 것은 아닙니다.")]),e._v(" "),t("p",[e._v("하지만 가장 기본적인 접근 방식은 다음과 같습니다.\n자동화된 솔루션을 제공할 것인가?  아니면\n아니면 사용자가 직접 할 수 있는 도구를 제공할 것인가?\n이는 일종의 방향성 결정입니다.  따라서 여러분은\n문제가 무엇인지 알고 있습니다.")]),e._v(" "),t("p",[e._v("무엇을 알아야 할까요?  사용자 목표에 대해 알아야 합니다.\n더 자세히 알아야 합니다.  사용자에 대해 한 단계 더 파고들겠습니다.\n목표.  가능한 여러 가지 접근 방식을 열거할 것입니다.\n접근법을 열거할 것입니다.  어떤 것이 가장 좋은지 결정하려고 할 것입니다.  그래서\n이것은 큰 단계입니다.  그리고 그 과정에서 여러분은 이 결정을 내릴 때 무엇이 중요한지\n이 결정을 내릴 때 무엇이 중요한지 생각해봐야 합니다.")]),e._v(" "),t("p",[e._v("So now I am going to talk about two things: the sort of direction, and\nlike strategy and tactics.  And I am not trying to imply that you will\nalways have this differentiation, or your thing will be layered like\nthis, but certainly if it is a bigger thing you will likely have two\nphases here.")]),e._v(" "),t("p",[e._v("You will have a direction setting moment, and then you will have many\nimplementation decision moments where you are going to be doing\nsimilar things, just at a different level, about a different level of\ndetail.")]),e._v(" "),t("p",[e._v("So at the direction stage it is about strategy.  Strategy means to be\na general, or to lead, and fundamentally it means about where are you\ngoing?  We are all going to follow you that way.")]),e._v(" "),t("p",[e._v("The things you want to capture here is you want to capture those\nintentions and objectives of the user -- not how, but what they are\ntrying to do.  And you are then going to start thinking about what are\nthe ways that you could possibly address it.  We are going to call\nthem approaches.  And these are high level, and I am not trying to\nenumerate them all here.")]),e._v(" "),t("p",[e._v("But a very basic one would, for instance, be: are we going to try to\nprovide an automated solution to make this happen for the user?  Or\nare we going to provide a tool for the user to do it for themselves?\nThat is a kind of directional decision that you want to make.  So you\nknow what the problem is.")]),e._v(" "),t("p",[e._v("What do you need to know?  You need to know about the user objectives\nin more detail.  You are going to dig down a level on the user\nobjectives.  You are going to enumerate a bunch of possible\napproaches.  You are going to try to decide which one is best.  So\nthis is a big phase.  And along the way you are going to have to have\nreflected about what matters to you in making this decision.")]),e._v(" "),t("p",[e._v("[Time 0:34:20]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Phase: Direction (cont.)\n\n_Where are you at?_ Have description and problem statement\n_Where are you going?_\n\n  Enumerating use cases\n\n  Making a strategy DM\n\n    criteria, approaches and tradeoffs\n\n  determining scope\n\n  entering Approach secion on top story\n")])])]),t("p",[e._v("그리고 나서 어떻게 할 건가요?  여기에 이미\n설명, 문제 진술이 있습니다.  이 단계에서는 사용 사례를 열거하면서\n이 단계에서는 사용 사례를 열거하고 싶을 것입니다.  이 단계에서 벗어나고 싶을 것입니다.\n전략 결정 매트릭스라고 부르는 단계로 넘어가고 싶을 것입니다.  곧 보여드리겠습니다.\n잠시 후에 보여드리겠지만, 여기에는 결정 기준이 포함되어 있습니다.\n결정 기준과 각 접근법의 장단점이 포함되어 있습니다.")]),e._v(" "),t("p",[e._v('또한 높은 수준의 범위 지정 작업을 수행하게 되는데, 여기에는 다음과 같은 내용이 포함될 수 있습니다.\n"우리는 지금 이 문제를 다루지 않습니다."를 포함할 수도 있습니다.  하지만 다음과 같은 내용도 포함될 수 있습니다,\n"우리는 자동화 솔루션을 제공하지 않을 것입니다. 왜냐하면 그것은 너무 커서\n자동화 솔루션을 제공하지 않을 것입니다.  우리는 이미 그런 생각을 가지고 있습니다.  하지만 사용자가 스스로\n사용자가 스스로 이 작업을 수행할 수 있는 도구를 제공할 수 있습니다."')]),e._v(" "),t("p",[e._v("그리고 결국에는 여러분이 취하고 있는 접근 방식에 대한\n스토리를 작성하게 될 것입니다.")]),e._v(" "),t("p",[e._v("And then what are you going to do about it?  Here have already got the\ndescription, the problem statement.  You are going to want to walk out\nof this phase with enumerated use cases.  You want to walk out of this\nphase with what I will call a strategy decision matrix.  I will show\nyou that in a second, but it incorporates the criteria for deciding\nthe approaches you might take, and the trade-offs of each.")]),e._v(" "),t("p",[e._v('You will also be doing the high level scoping thing, which could\ninclude, "We are not taking this on right now."  But it may include,\n"We are not going to provide an automated solution because that is\ngoing to be too big.  We already have that sense.  But we may provide\na tool for the users to help themselves do this thing."')]),e._v(" "),t("p",[e._v("And eventually you are going to get something to write in your top\nstory that is the approach you are taking.")]),e._v(" "),t("p",[e._v("[Time 0:36:53]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Technique: Use Cases\n\n                 _user's intentions and objectives_\n             in terms of _what_ the user could accomplish\n                       were the problem solved\n                           _not how_ (yet)\n                 make a blank 'how' column for later\n\nshould not start with\n\"the user will push an orange oval button and music will play\"\n\n_later_ you will fill in the 'how' column with that kind of recipe for\nusing the solution you've designed\n")])])]),t("p",[e._v("그래서 사용 사례입니다.  누구나 사용 사례를 할 줄 안다고 생각하죠.\n그리고 그것은 일반적으로 제가 사용 사례에서 보고 싶은 것이 아닙니다.\n다시 한 번 생각해보면 두 단계가 있습니다.  사용 사례를 위한 가장 좋은 첫 번째 단계는\n사람들이 달성하고자 하는 것에 대해서만 이야기하는 것입니다.  그들이\n세상에 대해 달라지기를 원하는 것  어떻게가 아니라\n할 수 있기를 바랍니다.")]),e._v(" "),t("p",[e._v('그래서 여러분은 의도가 적힌 작은 종이를 만들 것입니다,\n의도, 의도.  여기에는 비어있는 "방법"열이 있습니다.')]),e._v(" "),t("p",[e._v('저는 이것을 믿지 않습니다."사용자가 버튼을 눌러야한다고 말하는 카드를 만드십시오.\n버튼을 누릅니다.  이 색이 될 것이고, 이렇게 할 것입니다.\n할 것이다."  그렇게 하고 싶다면 좋습니다.  하지만 그건\n이 강연의 목적이 아닙니다.')]),e._v(" "),t("p",[e._v('나중에 여러분은 자신이 선택한 전략을 세우고\n실제로 어떻게 구현할 것인지에 대해 조금 더 알게 될 것입니다.\n어떻게 구현할 것인지에 대해 조금 더 알게 될 것이고, 다시 돌아가서 이렇게 말할 것입니다.\n우리가 실제로 무엇을 할 것인지?  우리는 사용자에게\n볼륨을 조절할 수 있는 노브를 제공하겠습니다."라고 말할 수 있습니다.')]),e._v(" "),t("p",[e._v("So use cases.  I think everybody thinks they know how to do use cases.\nAnd that is usually not what I want to see in a use case, because I\nthink again there is two phases.  The best first phase for use cases\nis to talk about only what people intend to accomplish.  What they\nwould like to be different about the world.  What they wish they could\ndo, not how.")]),e._v(" "),t("p",[e._v('So you are going to make a little tiny sheet that says intention,\nintention, intention.  It has got a "how" column that is blank.')]),e._v(" "),t("p",[e._v('I do not believe in this, "Make a card that says the user should put a\npush a button.  It is going to be this color, and it will do this\nthing."  I mean if you want to do that, that is great.  That is not\nwhat this talk is about.')]),e._v(" "),t("p",[e._v('Later, you will have a strategy that you have chosen, and you will go\nback -- actually you will know a little bit more about how you are\ngoing to implement it, and you are going to go back and say, "You know\nwhat we are actually going to do?  We are going to give the user a\nfreaking knob for the volume, please."')]),e._v(" "),t("p",[e._v("[Time 0:37:51]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Template: Use Cases\n\nproblem this sheet is about      | How (given solution design)  | Notes\n---------------------------------+------------------------------+-----\nuser intention/objective         |                              |\nanother user intention/objective |                              |\nanother user intention/objective |                              |\n")])])]),t("p",[e._v('이제 시작하겠습니다.  이것이 바로 사용 사례의 템플릿입니다.  It\n그다지 정교하지는 않죠?  하지만 항상 A1에 문제를 입력하세요.\n[A1 셀, 스프레드시트 왼쪽 상단 모서리]에 입력하세요.  스스로에게 이렇게 상기하세요,\n"이것이 우리가 생각하는 문제다".  이 부분을 빼놓으면\n이 시트가 무슨 내용인지 모릅니다.  A 열을 채우세요:\n객관적, 객관적, 객관적.  라디오 소리가 더 컸으면 좋겠어요.  나는\n라디오를 더 크게 만들 수 있었으면 좋겠다.  라디오를 끌 수 있으면 좋겠다.  전화가 오는 동안\n전화가 오는 동안 음소거 할 수 있으면 좋겠어요.')]),e._v(" "),t("p",[e._v("방법은 없습니다.  이것들은 내가 할 수 있었으면하는 것들입니다.\n방법은 나중에 할 수 있습니다.")]),e._v(" "),t("p",[e._v('So here we go.  This is what a template for a use case should be.  It\nis not very sophisticated, right?  But always put your problem in A1\n[cell A1, top left corner of a spreadsheet].  Just remind yourselves,\n"this is what we are thinking about".  Now if you leave that off, I do\nnot know what this sheet is about.  You are going to fill in column A:\nobjective, objective, objective.  I wish the radio was louder.  I wish\nI could make the radio louder.  I wish I could turn it off.  I wish I\ncould mute it while my phone call came in.')]),e._v(" "),t("p",[e._v("Not how.  These are just things I would like to be able to do, and\nthen how, you will do later.")]),e._v(" "),t("p",[e._v("[Time 0:38:25]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Example: Use Cases\n")])])]),t("p",[t("img",{attrs:{src:"DesignInPractice/example-use-cases.png",alt:"0:38:25 Example: Use Cases"}})]),e._v(" "),t("p",[e._v("그래서 이것은 진짜입니다.  다시 한 번 말씀드리지만, 우리는 정말 이 일을 합니다.  모두들 모스 부호에 대해\n모스에 대해 들어보셨나요?  REBL의 후계자?  모스로 할 수 있는 일이\n모스로 할 수 있는 일이 많아요  모스를 사용할 수 있는 상황도 많고,\n모스를 물건에 연결할 방법도 많아요")]),e._v(" "),t("p",[e._v("우린 그냥 브레인스토밍을 하고 있었어요.  그리고 이것은 거창한\n거창한 건 아니에요.  40분 동안 앉아서 이야기를 나눴는데요.\n이렇게 했어요  이 시트를 만들었죠.  그걸 작성하고\n무엇이 무엇인지에 대해 이야기했습니다.  하지만 이 사용 사례 단계에서는\nA만 하겠죠?  이것은 열 B, 즉 어떻게 하는지를 보여주는 완성된 스토리입니다,\n를 보여주는 완성된 스토리입니다.")]),e._v(" "),t("p",[e._v("So this is real.  Again, we really do this.  Everybody heard about\nMorse today, maybe?  REBL's successor?  This is a lot of things you\ncould do with Morse.  A lot of context in which you could use Morse,\nand a lot of ways you might want to connect Morse to your stuff.")]),e._v(" "),t("p",[e._v("And we were just sort of brainstorming.  And this is not a giant\nthing.  We sat and talked for 40 minutes, and this is what we did\nwhile we were talking.  We made this sheet.  We filled it out, and we\ntalked about what was what.  But in this use case phase we would only\ndo A, right?  This is a completed story that shows column B, the how,\nas well.")]),e._v(" "),t("p",[e._v("[Time 0:39:08]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title:  Technique: Decision Matrix (DM)\n\n              _a (google or other live-editing) sheet_\n\n    A:1 what decision are you trying to make, for which problem?\n\n_Approaches_ - Columns (but first labels rows)\n_Criteria_ - Rows (but first labels columns)\n_Aspects_ - Cells\n\nsheets > docs\n\n  prose docs create a linearization that makes contrast difficult\n")])])]),t("p",[e._v("따라서 이 단계의 또 다른 중요한 기술은 의사 결정 매트릭스입니다.  그리고\n이 강연의 핵심은 의사 결정 매트릭스에 대해 이야기하는 것입니다.  I\n저는 주로 조직 모드에서 혼자 디자인할 때 이 작업을 수행하곤 했습니다.\n편집 모드 https://orgmode.org ]에서 주로 설계할 때 이 작업을 수행했지만, 지금은 완전히\n이런 종류의 디자인을 하는 가장 좋은 방법은 이 단계에서\n디자인, 그리고이 작업은 스프레드 시트에 있습니다.  특히\n실시간 편집 스프레드시트인 스프레드시트입니다.  그래서 우리는 Google\n스프레드시트 [ https://www.google.com/sheets/about ].")]),e._v(" "),t("p",[e._v("그렇다면 의사 결정 매트릭스란 무엇일까요?  스프레드시트입니다.  그것은\n한 명 이상의 사람이 동시에 볼 수 있고\n동시에 편집 할 수 있습니다.  다른 사람이 있는지 모르겠습니다 ... 나는 확신한다\nMicrosoft에는 하나가 있습니다.")]),e._v(" "),t("p",[e._v("A1은 다음과 같습니다: 어떤 결정을 내리려고 하나요?  어떤 문제가\n작업하고 있습니까?  항상 A1입니다.  제가 여러분의 프로젝트에 와서 디자인 멘토링을\n디자인 멘토링을 원하는데 A1이 채워지지 않았다면, 우리가 무엇을\n어떤 작업을 하게 될까요?  A1.  좋은 문제 진술서를 작성하세요.")]),e._v(" "),t("p",[e._v("여기에 문제 진술을 바로 복사할 수 있습니다.  하지만 종종\n구체적인 결정에 더 가깝습니다.  하지만 다음과 관련이 있어야 합니다.\n그거요.  문제를 직시하는 것은 매우 중요합니다.  그것은\n이 문제가 항상 나를 괴롭히는 것처럼 느껴져야 합니다.")]),e._v(" "),t("p",[e._v("그리고 내가 그것을 보고 있다는 것은 그것을 외부 자극이라고\n외부 자극.  그것도 중요합니다.")]),e._v(" "),t("p",[e._v("알겠어요.  그럼 어떻게 할 건가요?  문제를 해결하기 위한\n문제 해결을 위한 다양한 접근 방식이 있을 겁니다.  이것이 여러분의\n열입니다.  첫 번째 열은 행에 레이블을 지정하고 다른 열은\n열은 가능한 다양한 접근 방식이 될 것입니다.")]),e._v(" "),t("p",[e._v("이 결정을 어떻게 내릴 것인가에 대한 기준이 있을 것입니다.\n이것이 행이 될 것이며, 첫 번째 행 한두 개를 제외한 나머지 행은\n열입니다.")]),e._v(" "),t("p",[e._v("마지막으로, 내부 셀이 있는데, 이는 해당 기준의 관점에서 특정 접근 방식의\n해당 기준의 관점에서 특정 접근 방식입니다.  즉\n내부 셀에 들어가는 내용입니다.  저는 문서보다 시트를 강력히 추천합니다.\n여기.  문서는 선형적이고 대비를 지원하지 않으니까요.\n잠시 후에 설명하겠습니다.")]),e._v(" "),t("p",[e._v("So the other big technique in this phase is the decision matrix.  And\nthis is the heart of the talk, is to talk about decision matrix.  I\nused to do this when I was mostly designing by myself in Org mode [an\nediting mode in Emacs https://orgmode.org ], but I am a complete\nconvert that the best way to do this kind of design, in this phase of\ndesign, and this work, is in a spreadsheet.  And in particular, it is\nin a spreadsheet that is a live editing spreadsheet.  So we use Google\nSheets for this thing [ https://www.google.com/sheets/about ].")]),e._v(" "),t("p",[e._v("So what is a decision matrix?  It is a spreadsheet.  It is a\nspreadsheet that more than one person can see at the same time, and\nedit at the same time.  I do not know if somebody else ... I am sure\nMicrosoft has one.")]),e._v(" "),t("p",[e._v("A1 will be: what decision are you trying to make?  What problem are\nyou working on?  Always A1.  If I come up to your project and you want\nsome design mentoring, and A1 is not filled in, guess what we are\ngoing to be working on?  A1.  Have a good problem statement.")]),e._v(" "),t("p",[e._v("You can copy your problem statement right in here.  Often, though,\nthis is more of a specific decision.  But it should be related to\nthat.  Keeping your problem in your face is super important.  It\nshould just be always like this problem is just haunting me.")]),e._v(" "),t("p",[e._v("And I am seeing it, which means I am forced to think about it as an\nexternal stimulus.  That is also critical.")]),e._v(" "),t("p",[e._v("All right.  So what are you going to have?  You are going to have\ndifferent approaches to solving the problem.  These will be your\ncolumns.  The first of the columns will label the rows, but the other\ncolumns will be your various possible approaches.")]),e._v(" "),t("p",[e._v("You will have criteria: how are you going to make this decision?\nThese will be the rows, except the very first row, or two, labels the\ncolumns.")]),e._v(" "),t("p",[e._v("And finally, you have the interior cells, which is the aspects of a\nparticular approach from the perspective of that criteria.  That is\nwhat goes in the inner cell.  I do strongly recommend sheets over docs\nhere.  Docs are linear, and they do not support contrast, which I will\ntalk about in a second.")]),e._v(" "),t("p",[e._v("[Time 0:41:05]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Template: DM\n")])])]),t("p",[t("img",{attrs:{src:"DesignInPractice/template-DM.png",alt:"0:41:05 Template: DM"}})]),e._v(" "),t("p",[e._v("이것은 DM용 템플릿입니다.  이걸 확대할 필요는 없을 것 같습니다.\n확대할 필요는 없을 것 같습니다.  이것은 실제가 아닙니다.  이것은 템플릿일 뿐입니다.  왼쪽 상단\nA1: 어떤 문제를 해결하고 계신가요?")]),e._v(" "),t("p",[e._v("[열] B C D E는 여러분이 취하고자 하는 접근 방식입니다.  다음과 같은 경우\n이미 이 작업을 수행하고 있거나 부족한 부분이 있는 시스템을 수정하는 경우\n이 영역을 첫 번째 접근 방식으로 삼으세요.  첫 번째 접근 방식은 다음과 같습니다.\n아무것도 하지 않습니다.  현재 어떤 상태인가요?  지금 우리 시스템은 무엇을 하고 있나요?\n일반적으로 그 열에는 뭔가 좋지 않은 것이 있을 것입니다.  그리고 나서\n다른 접근 방식이 있을 것입니다.  이에 대해서는 잠시 후에 자세히 설명하겠습니다.\n둘째.")]),e._v(" "),t("p",[e._v("그리고 행 아래에는 기준, 기준, 기준이 있습니다.  그리고\n내부에는 측면이 있으며, 여기서 우리는 접근 방식이 어떻게\n접근 방식이 기준을 어떻게 다루는지에 대해 이야기할 것입니다.")]),e._v(" "),t("p",[e._v("So this is a template for a DM.  I do not think I have to zoom this\none in.  This is not real.  This is just a template.  The upper left\ncorner, A1: what problem are you working on?")]),e._v(" "),t("p",[e._v("[Columns] B C D E are the approaches you want to take.  If you are\nmodifying a system that already kind of does this, or has a lacking in\nthis area, make that the first approach.  The first approach is: do\nnothing.  Where are we at?  What does our system do right now?\nUsually, there will be something not great in that column.  And then\nyou will have other approaches.  I will talk in detail about that in a\nsecond.")]),e._v(" "),t("p",[e._v("And then down the rows are criterion, criterion, criterion.  And then\ninside we have the aspects, where we are going to talk about how the\napproach deals with criterion.")]),e._v(" "),t("p",[e._v("[Time 0:41:50]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: DM Columns: Approaches\n\nfirst row or two describe approach\n- must give you shorthand for talking, yet make clear what about\n- _succinct description_ of approach, use row 2 if needed\n- freeze the approach title/description rows\n\n  if you are modifying something, the first 'approach' should be the status quo\n\n  columns for what others have done in same situation\n\n  and your initial ideas\n\nA DM is about _creating_ a great approach, not merely shopping\n\n         _the answer is often an approach you don't begin with_\n")])])]),t("p",[e._v("따라서 접근 방식은 상단에 레이블을 지정하는 것입니다.  다시 말하지만\n간결해야 하지만 엉뚱한 이름을 사용하지 마세요.  슈퍼\n속기하지 마세요.  만약 누군가가 당신의 물건에 다가와서 C열의 첫 번째 상자만 읽었다면\nC 열의 첫 번째 상자만 읽었다면, 그들은 C 열이 무엇인지 이해할 수 있을까요?\n이해할 수 있을까요, 아니면 그 의미를 속기했을까요?  만약\n행과 같이 제목에 더 가까운 이름으로 작성할 수 없다면\n하나, 두 번째 행에 문장 길이를 입력하세요.")]),e._v(" "),t("p",[e._v("무슨 말을 하려는지 명확히 알 수 있어야 합니다.  나는\n많은 사람들이 열이 있기 때문에 여기서 어려움을 겪는 것을 보았습니다.\n이 열이 실제로 무엇에 관한 것인지 명확하지 않기 때문입니다.  어떤 전략이나\n어떤 접근 방식에 관한 것입니다.  이 두 가지를 구분할 수 있도록 충분한 세부 정보를 넣으세요.\n둘을 구분할 수 있습니다.")]),e._v(" "),t("p",[e._v("그런 다음 해당 행을 고정하세요.  이미 첫 번째 열을 사용하는 것에 대해 이야기했습니다.\n열, 첫 번째 접근 방식을 지금 하고 있는 일과 비슷하게 사용하라고 이미 말씀드렸습니다.")]),e._v(" "),t("p",[e._v('다른 사람들이 하는 일에 대해 생각해 보세요.  이 자료는\n"해먹 중심 개발"에 나오는 내용입니다.')]),e._v(" "),t("p",[e._v("So the approach is we are going to label them in the top.  Again, you\nneed to be succinct, but do not take goofy names.  Do not do super\nshorthands.  If somebody walked up to your thing and they read just\nthe first box of column C, would they understand what columns C was\nreally about, or did you shorthand the meaning of it away.  If you\ncannot get it done in something that is more like a title, like in row\none, take a second row and put in a sentence length thing.")]),e._v(" "),t("p",[e._v("You need for what you are talking about to be super clear.  I have\nseen a lot of people just struggle here because they have columns and\nit is not actually clear what this column is about.  What strategy or\nwhat approach this is about.  Put enough detail in there so you can\ndistinguish the two.")]),e._v(" "),t("p",[e._v("And then freeze those rows.  I already talked about using the first\ncolumn, first approach, to be like what you do right now.")]),e._v(" "),t("p",[e._v('You want to think about what other people do.  This is stuff from\n"Hammock-driven Development".')]),e._v(" "),t("p",[e._v('[ Rich Hickey, "Step Away from the Computer, or Hammock-driven\nDevelopment", October, 2010\nhttps://github.com/matthiasn/talk-transcripts/blob/master/Hickey_Rich/HammockDrivenDev-mostly-text.md\n]')]),e._v(" "),t("p",[e._v("그리고 나서 여러분은 아마도 좋은 접근 방식에 대한\n좋은 접근 방식.")]),e._v(" "),t("p",[e._v("여기서 제가 강조하고 싶은 것은 이것이 쇼핑이 아니라는 것입니다.\n쇼핑 연습이 아닙니다.  이것은 단지 다음과 같은 것이 아닙니다.\n하는 것, 다른 사람들이 하는 것, 그리고 제 첫 번째 아이디어 중 하나를 고르겠습니다.\n하나.  그런 것이 아닙니다.  다른 사람들과 어떻게 다른지\n서로 어떻게 다른지, 그들의 자질이 무엇인지 조사하는 운동\n자질이 무엇인지, 그리고 하나 이상의 새로운 칼럼, 새로운 접근법을\n칼럼, 새로운 접근 방식.  이곳은 여러분이 혁신할 수 있는 곳입니다.  그래서\n쇼핑이 아닙니다.")]),e._v(" "),t("p",[e._v("And then you are going to have your own first ideas about possibly\ngood approaches.")]),e._v(" "),t("p",[e._v("The main thing I want to do here is, I want to emphasize, this is not\na shopping exercise.  This is not just like: well, I have got what we\ndo, what other people do, and my first idea, and we are going to pick\none.  That is not what it is about.  It is about going through the\nexercise of examining how they differ from each other, what their\nqualities are, and hopefully driving the birth of one or more new\ncolumns, new approaches.  This is a place where you can innovate.  So\nit is not it is not shopping.")]),e._v(" "),t("p",[e._v("[Time 0:43:23]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: DM Rows: Criteria\n\n                    'means of judging/deciding'\n\nFirst column - _succinct descriptions_ of criteria (freeze this column)\nInclude criterion iff salient or relevant, sort by importance, distinction\n\nwill usually include rows for\n\n  fitness for solving the problem (from use cases)\n\n  various '-ilities'\n\n  costs (time, dev effort, $), risks\n\n  compatibility, complexity\n\n  etc - purpose built for problem (reflective)\n")])])]),t("p",[e._v("알겠습니다.  기준.  이 단어는 매우 중요합니다.  그것은 아닙니다\n특징.  그것은 기준입니다.  기준.  그것은 판단의 수단입니다,\n결정합니다.  비평가.  비판적.  이 모든 단어는 결정을 내리는 것에 관한 것입니다.\n결정을 내리고 사물에 대해 긍정적이고 부정적인 말을하는 것에 관한 것입니다.\n판단할 수 있도록 말이죠.")]),e._v(" "),t("p",[e._v("하지만 그 판단의 근거는 무엇일까요?  그것은 바로\n반성적이어야 합니다.  그것은 문제가 아닙니다.  그것은 문제를 해결하는 것에 대해\n문제 해결에 대한 느낌에 있습니다.  제 말은 그 중 일부는\n문제 때문입니다.  만약 당신의 접근 방식이 문제를 전혀 해결하지 못한다면,\n두통이 사라지지 않는다면, 그것은 실제로 누군가의 두통을 없애기 위한\n누군가의 두통을 없애기 위한 접근 방식이 아닙니다.")]),e._v(" "),t("p",[e._v("따라서 문제를 해결하기위한 몇 가지 행이 있지만 다음을 갖게됩니다.\n잠재적으로 메타에 관한 다른 행이 많이 있습니다.\n메타에 관한 행이 많이 있을 것입니다.  개발 시간은 얼마나 걸리나요?\n얼마나 걸리나요?  이전에 수행한 작업과 호환되나요?  혹시\n깨질 가능성은 없는가?  비용은 얼마나 드나요?  운영 비용은\n운영하려면?  어떤 규제에 의해 허용되나요?")]),e._v(" "),t("p",[e._v("행의 후보가 될 수 있는 많은 것들이 있을 것입니다,\n하지만 사전에 완전히 열거해서는 안 됩니다.  매번\n문제를 해결할 때마다 무엇이 중요한지 선택해야 합니다.\n중요하고 중요한 것만 넣어야 합니다.  따라서 다음과 같은 항목이 필요합니다.\n두드러지거나 관련성이 있어야 합니다.  두드러진다는 것은 이 문제의 한 측면이라는 뜻입니다.\n눈에 띄는 것을 의미하고, 관련성이 높다는 것은 우리 문제에 중요한\n중요하다는 뜻입니다.")]),e._v(" "),t("p",[e._v('열 중 하나가 살아있는 토끼이고 다른 열 중 하나가\n열 중 하나가 토끼 옷을 입은 탱크인 경우, "토끼의 색깔은 무엇입니까?"라는\n"털 색깔은 어떤 색인가요?" 또는 "털은 얼마나 부드럽나요?"라는 행을 만들 수 없습니다.  당신은\n"상추를 얼마나 많이 먹나요?"와 "트럭을 부술 수 있습니까?"라는 행이 있습니다.\n트럭을 부술 수 있을까?", "어떤 종류의 탄약이 필요할까?"와 같은 질문이 나올 것입니다.  이 두 가지를\n이 두 가지를 정말로 구별하는 것들.  모르겠어요\n탱크의 무게는 얼마인가요?  우리는 정말 정말 무거운 토끼를 원하지 않습니다.\n알았어요.  그래서 그것은 특성이 아니라 기준입니다.')]),e._v(" "),t("p",[e._v("All right.  Criteria.  This word is very important.  It is not\ncharacteristic.  It is criteria.  Criteria.  It is a means of judging,\ndeciding.  Critic.  Critical.  All those words are about making a\ndecision, and about saying positive and negative things about things\nso that you can judge.")]),e._v(" "),t("p",[e._v("But what is the basis for that judgment?  Well that is something that\nhas got to be reflective.  It is not in the problem.  It is in how you\nfeel about addressing the problem.  I mean that some of it is driven\nby the problem.  If your approach does not solve the problem at all,\nif it does not make the headache go away, well it is not really an\napproach to getting rid of somebody's headache.")]),e._v(" "),t("p",[e._v("So you will have some rows for solving the problem, but you will have\na bunch of other rows, potentially, that are about meta\ncharacteristics of this approach.  How much development time does it\ntake?  Is it compatible with what we have done before?  Is it going to\npossibly break things?  How much does it cost?  How much will it cost\nto operate?  Is it allowed by some regulatory thing?")]),e._v(" "),t("p",[e._v("You are going to have a bunch of things that are candidates for rows,\nbut you should never fully enumerate them in advance.  Every time you\ntake on a problem, you are going to need to be selective about what\nmatters, and only put in what matters.  So you want things that are\nsalient or relevant.  Salient means it is an aspect of this thing that\nsticks out, and relevant means that it is an aspect of this thing that\nmatters to our problem.")]),e._v(" "),t("p",[e._v('If you have one of your columns is a live bunny, and another one of\nyour columns is a tank in a bunny suit, you are not going to have a\nrow that is "what color is the fur?" or "how soft is it?"  You are\ngoing to have a row that says "how much lettuce does it eat?" and "can\nit crush a truck?" and "what kind of ammunition does it need?"  The\nthings that really distinguish these two things.  I do not know how\nmuch does a tank weigh?  We do not want a really, really, heavy bunny.\nAll right.  So it is not characteristics, it is criteria.')]),e._v(" "),t("p",[e._v("[Time 0:45:31]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: DM Cells: Aspects\n\n                     _of approach per criterion_\n   _succinct description_ of how approach handles criterion (or doesn't)\n          avoid y/n/true/false/numeric-rank criteria, and in cells\n\n_avoid judgement in text_, instead use (unsaturated!) cell background color\n\n  Neutral - clear\n\n  Some challenge or negative - yellow\n\n  Seems blocking or failing to address problem - red\n\n  Seems particularly desirable/better - green\n")])])]),t("p",[e._v("그리고 우리는 측면을 가질 것입니다.  이것은 다시 말하지만, 내부 셀에 들어가는 간결한\n내부 셀에 들어가는 설명입니다.  정말 쓰고 싶으시다면\n여기에 몇 단어를 적으세요.  사람들이 이해하도록 돕고 싶으시겠죠.\n이 관점에서 이 접근 방식에 대해 생각해 보거나\n이 기준의 관점에서 이 접근 방식 - 그것이 바로\n측면은 무언가를 바라본다는 뜻입니다.  이 관점에서 보면\n이것이 보이는 것입니다.")]),e._v(" "),t("p",[e._v("여기서는 예, 아니오, 참, 거짓 등의 단어가 아닌 단어로 표현해야 합니다.\n'예, 그렇습니다'가 아니라 '"),t("em",[e._v("어떻게")]),e._v(" 그렇습니다'라고 말하세요.\n그것.  어떻게 하는지 말하세요. 두 가지 다른 대답이 나올 수 있으니까요.\n두 가지 대답이 나올 수 있지만 어떻게 하는지는 다를 수 있으니까요.  쓰다\n단순히 '예'가 아니라 어떻게 하는지 적으세요.  예, 그들은\n가지고 있습니다.  백업 전략이 있나요?  네, 그렇습니다.  플로피 디스크를 사용할 수도 있고\n플로피 디스크를 사용할 수도 있고 복제를 사용할 수도 있습니다.  그렇게 말하세요.")]),e._v(" "),t("p",[e._v("여기서 하고 싶은 또 다른 일은 텍스트에 주관적인\n주관적인 판단을 피하고 싶다는 것입니다.  그러지 마세요.  그냥 사실 그대로\n사실만 쓰세요.  이 관점에서 보면 이 글에는 이런 내용이 있습니다.\n아니면 이런 것이 없을 수도 있습니다.")]),e._v(" "),t("p",[e._v("그리고 제가 옹호하고 우리가하는 일은 색상을 사용하는 것입니다,\n아까 보셨듯이 시트에 색상을 사용해 주관성을 표현하는 것입니다.\n이것이 시트에서 주관성을 사용하는 "),t("em",[e._v("유일한")]),e._v(" 장소입니다.  만약\n무언가 괜찮다면 중립적이고 선명한 색으로 남겨둡니다.  만약\n이 방식에 문제나 부정적인 특징이 있는 경우\n이 기준을 다루는 방식에 도전이나 부정적인 특징이 있다면 노란색으로 색칠합니다.  만약\n이 접근 방식이 완전히 차단하는 것처럼 보이면\n사용자에게 금지되어 있고, 문제에 대한 답변을 제공하지 못하는 경우에는\n빨간색으로 표시합니다.  따라서 일종의 차단입니다.  그리고 특히\n다른 것보다 좋거나, 바람직하거나, 더 나은 경우에는 녹색으로 표시합니다.")]),e._v(" "),t("p",[e._v('간단히 말해서 장단점 행으로 시작할 수 있습니다.  여기 있습니다\n내 접근 방식.  이것의 장점은 다음과 같고 단점은 다음과 같습니다.\n이것.  하지만 문제는 두 개의 라이브러리 중 하나를 선택해야 할 때입니다,\n라이브러리 중 하나는 "지연 시간이 정말 짧습니다"라고 하고\n다른 하나는 "처리량이 정말 높습니다"라고 말합니다.  그리고 이것이 바로\n기능입니다.  좋아요, 두 가지 장점이 있습니다.')]),e._v(" "),t("p",[e._v("하지만 높은 처리량을 기준으로 살펴본 것은 아닙니다.\n지연 시간이 무엇인지, 그리고 지연 시간이 짧은 것을 보지 않았습니다.\n처리량이 어떻게 되는지 살펴보지 않았습니다.  따라서\n모든 기준이 고유한 행을 갖도록 이러한 것들을 세분화하기 전까지는\n대조할 수 없습니다.")]),e._v(" "),t("p",[e._v("우리가 하려는 것은 서로 다른 것을 나란히 배치하는 것입니다.\n다른.  그것이 우리의 마음을 움직이는 것입니다.  우리는 엣지를 좋아합니다.  우리는 가장자리를\n가장자리를 보는 것을요.  아이디어에 엣지를 만들어야 합니다.  그것이 바로\n당신의 생각을 촉발시킬 것입니다.")]),e._v(" "),t("p",[e._v("And then we are going to have the aspects.  This is, again, a succinct\ndescription that goes in the inner cell.  You really want to write\nsome words here.  You really want to help people understand: when you\nthink about this approach from this perspective, or when you look at\nthis approach from the perspective of this criteria -- that is what\naspect means: look at something.  When you look at it from that, this\nis what you see.")]),e._v(" "),t("p",[e._v("It should be words here, not yes, no, true, false, that kind of stuff.\nTry to say: if it does it, say "),t("em",[e._v("how")]),e._v(' it does it, not that yes it does\nit.  Say how it does it, because you are going to have two different\nanswers that both have a "yes", but how they do it differs.  Write\ndown how they are doing it, not just yes they do it.  Yes, they have\nit.  Do they have a backup strategy?  Yes, yes.  Well, one may use\nfloppy disks, and one may use replication.  So say that.')]),e._v(" "),t("p",[e._v("The other thing you want to do here is: you want to avoid subjective\njudgment in your text.  Do not do that.  Just write what the facts\nare.  When we look at this from this perspective, this is what it has.\nOr maybe, it does not have this.")]),e._v(" "),t("p",[e._v("And then what I would advocate, and what we do, is we use colors,\nwhich you saw before, some colors on the sheet to show subjectivity.\nThis is the "),t("em",[e._v("only")]),e._v(" place that we use subjectivity on the sheet.  If\nsomething is just OK for this, we leave it neutral, clear.  If there\nis some challenge or negative characteristic to the way that this\napproach deals with this criterion, then we will color it yellow.  If\nthe way it does it seems completely blocking -- it is prohibitive to\nus, prohibitive to the user, failing to answer the problem, we will\ncolor it red.  So it is kind of blocking.  And if it is particularly\nnice, desirable or better than the others, we will color it green.")]),e._v(" "),t("p",[e._v('You can, as a shorthand, just start with pros and cons rows.  Here is\nmy approaches.  Here is the pros of this, and here is the cons of\nthis.  But the thing is, maybe you are picking between two libraries,\nand one of the libraries says "I have really low latency" and the\nother one says "I really have high throughput".  And these are their\nfeatures.  Well okay, that is two pros.')]),e._v(" "),t("p",[e._v("But you have not looked at the high throughput one on the basis of\nwhat is its latency, and you have not looked at the low latency one\nfrom the perspective of how is its throughput.  So until you have\nbroken up these things so that every criterion gets its own row, you\nare not going to have the ability to contrast.")]),e._v(" "),t("p",[e._v("What we are trying to do is to get things next to each other that are\ndifferent.  That is what makes our mind go.  We love edges.  We love\nseeing edges.  You need to create edges in your ideas.  That is what\nis going to trigger your thinking.")]),e._v(" "),t("p",[e._v("[Time 0:48:22]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Example: DM\n")])])]),t("p",[t("img",{attrs:{src:"DesignInPractice/example-DM.png",alt:"0:48:22 Example: DM"}})]),e._v(" "),t("p",[e._v("이것이 바로 우리가 생각하는 진짜 DM입니다.  이것은 아직\n아직 출시하지 않았습니다.")]),e._v(" "),t("p",[e._v("클로저에서 함수형 인터페이스는 어떻게 처리하나요?  많은 방법이 있습니다.\n많은 방법이 있습니다.  이 시트는 저쪽으로 이동합니다.\n적어도 열 G까지 오른쪽으로 스크롤합니다].")]),e._v(" "),t("p",[e._v("하지만 A1에는 다음과 같은 간결한 문제 진술이 있습니다.\n메서드를 사용하여 어댑터를 사용하지 않고는 Java 함수 인터페이스를 사용할 수 없습니다.\n오늘 다시 살펴봅시다.  열 B는 오늘날 우리가 가지고 있는 것입니다.  사람들은\n리파이프를 많이 작성합니다.  그들은 그들이 타겟팅하려는 유형을 알아야 합니다.\n대상.  중복되는 내용이 많아요.  저 열은 노란색과 빨간색 사이에 있는\n노란색과 빨간색, 그리고 노란색 사이에 있는 주황색입니다.  그리고\n좋은 다른 접근 방식이 있습니다.  무언가가\n완전히 놀랍습니다.")]),e._v(" "),t("p",[e._v("This is a real DM here we are thinking about.  This is not something\nwe are shipping yet.")]),e._v(" "),t("p",[e._v("How do we deal with functional interfaces in Clojure?  There is a lot\nof ways to do it.  This sheet goes, goes over there [as he is\nscrolling to the right up to column G at least].")]),e._v(" "),t("p",[e._v("But there is a concise problem statement in A1: You cannot use Java\nmethods to take Java functional interfaces without using an adapter or\nreify today.  Column B is what we have today.  People are writing\nreify a lot.  They need to know the types that they are trying to\ntarget.  It is a lot of redundant stuff.  That column is kind of a lot\nof orange, which is between yellow and red, and yellow.  And then\nthere are other approaches which are good.  It is rare that something\nis totally amazing.")]),e._v(" "),t("p",[e._v("[Time 0:49:14]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: DM: Tips\n\nAvoid\n_the all-green column_ - are you rationalizing?\n_undistinguished columns_ - find the differences that matter\n_exhaustive or template rowsets_ - s.b. specific criteria, not just characteristics\n_links as primary cell content_ - ok as supplement to summary text in cell\n_hidden comments/popups etc_ - keep things in view\n_phrasing criteria as questions_ - clash with inline questions\n\ninclude questions as soon as they arise!\n\n  put '?' anywhere (approach/criterion/aspect)\n\n    - if you are unsure of importance\n\n    - or the info is unknown\n")])])]),t("p",[e._v("좋은 DM을 작성하기 위한 몇 가지 팁을 알려드리겠습니다.  녹색 열은 모두 피하세요.  그\n가능성이 매우 낮습니다.  그것은 당신이 합리화하고 있다는 신호일 수 있습니다.  아무것도\n완전히 멋진 것은 없습니다.")]),e._v(" "),t("p",[e._v("구분되지 않는 열은 피하세요.  두 개의 열을 살펴봤는데\n어떤 식으로든 다르지 않다면 행을 놓치고 있을 가능성이 높습니다.\n두 열을 구분하는 기준이 누락되었을 가능성이 높습니다.\n그것을 찾고 싶을 것입니다.")]),e._v(" "),t("p",[e._v("앞서 말씀드렸듯이 완전한 행 집합을 원하지 않습니다.  당신은\n사전 정의된 행 집합을 원하지 않으며, 모든 특성을 원하지 않습니다.\n모든 특성을 원하지 않습니다.  중요한 것만 찾으면 됩니다.")]),e._v(" "),t("p",[e._v("그리고 끊임없이 상승하세요.  스프레드시트의 또 다른 좋은 점은\n행을 위로 이동할 수 있다는 점입니다.  행을 드래그하기만 하면 위로 올라갑니다.  그러니 계속\n스프레드시트에서 다른 접근 방식과 가장 차별화되는 항목들을\n스프레드시트에서 계속 밀어 올리세요.  아무도 페이지와 페이지에 신경 쓰지 않습니다.\n이 관점에서는 모든 것이 동일합니다.")]),e._v(" "),t("p",[e._v("링크나 참조를 기본 셀 콘텐츠로 사용하지 마세요.  Write\n무언가를 작성하세요.  사고의 관점에서 핵심은 다음과 같습니다.\n중요한 내용을 보는 것입니다.  링크가 있으면 아무것도\n아무것도 보이지 않습니다.  집중을 깨고 가서 링크를 따라가야 합니다.\n링크를 따라가야 합니다.  링크를 보조 자료로 사용할 수 있습니다.")]),e._v(" "),t("p",[e._v('댓글을 허용하는 이러한 것의 기능을 사용하지 마세요.  나는\n구석에 작은 삼각형이 보입니다.  그게 뭐죠?  마우스를 가져가거나\n클릭하면 여기입니다.  궁금한 점이 있거나\n궁금한 점이 있거나 잘못되었다고 생각되면 옆에 있는\n셀이나 메모에 적으세요.  다음과 같은 것들이 많이 보일 것입니다.\n"메모" 열이 있습니다.  메모란에 적어 놓으면\n누군가의 얼굴에.  이제 상대방은 회원님의 의견을 보기 위해 선택하지 않아도 됩니다.\n생각하세요.  여러분이 생각하는 바를 말했으니 상대방이 알아서 판단하도록 하면 됩니다.')]),e._v(" "),t("p",[e._v('그리고 기준을 질문으로 표현하지 마세요.  그 이유는 다음과 같습니다.\n시트에 질문을 작성할 수 있어야 하고\n검색할 수 있어야 하기 때문입니다.  진행하면서 "이걸로 이걸 할 수 있을까?\n이걸 할 수 있을까?  이게 충분히 빠를까?  궁금해\n이걸 고려해야 할까?"라고 생각하게 됩니다.  만약 당신이 당신의\n기준을 "이 물음표가 있는가?  저 물음표가 있나요?\n물음표가 있나요?"라고 하면 물음표를 검색하여 원하는\n질문.')]),e._v(" "),t("p",[e._v("So some tips about doing a good DM.  Avoid the all green column.  That\nis very unlikely.  That is a sign you might be rationalizing.  Nothing\nis totally wonderful.")]),e._v(" "),t("p",[e._v("Avoid undistinguished columns.  If you go through in those two columns\nand they are not different in any way, you are probably missing a row.\nYou are probably missing some criteria that distinguishes them, and\nyou want to find it.")]),e._v(" "),t("p",[e._v("I talked before, you do not want an exhaustive row set.  You do not\nwant a predefined row set, and you do not want every characteristic of\nevery possible approach.  You just want the ones that matter.")]),e._v(" "),t("p",[e._v("And relentlessly move up.  The other nice thing about a spreadsheet\nis: you can move rows up.  You just drag them and they go up.  So keep\npushing up on your spreadsheet on the things that most distinguish\nyour different approaches.  No one cares about pages and pages of\neverything's the same on this from this perspective.")]),e._v(" "),t("p",[e._v("Avoid links or references out as your primary cell content.  Write\nsomething there.  The key here from a thinking standpoint is: you are\nseeing the stuff that matters.  If it is a link, you are seeing\nnothing.  You have got to go break your concentration and go follow\nthe link then.  You can have links as supplements.")]),e._v(" "),t("p",[e._v('Do not use the features of these things that allow comments.  I see a\nlittle triangle in the corner.  What is that?  I have got to hover or\nclick and now it is over here.  If you have a question about\nsomething, or you think it is bad or whatever, just write it on the\ncell next to it, or in the notes.  You will see a lot of these things\nhave "Notes" columns.  Just write it in the notes so it is in\nsomeone\'s face.  Now they do not have to opt into seeing what you\nthink.  You said what you think, and you put it in their way.')]),e._v(" "),t("p",[e._v('And then avoid phrasing the criteria as questions.  This is because\nyou want to be able to write questions in your sheet, and you want to\nbe able to search for them.  As you were going you are like, "I wonder\nif this can do this?  I wonder if this will be fast enough?  I wonder\nif we should be thinking about this thing?"  If you phrase your\ncriteria as, "Does it have this question mark.  Does it have that\nquestion mark," then you cannot search for question mark and find your\nquestions.')]),e._v(" "),t("p",[e._v("[Time 0:51:19]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: DM: Outputs\n\na succinct _description of the problem/decision_ being taken on\na set of _several approaches_, succinctly described\nan explicit and clear expression of _what matters in making the decision_\n_detailed aspects_ for all of the approaches per criterion\n- aligned for contrast\n\nat-a-glance, fine-grained _subjective assessment_\n- subjectivity all in one place (cell color)\n\n  a set of questions for follow up\n\n                _clear benefits + tradeoffs_\n")])])]),t("p",[e._v("이렇게 하면 무엇을 얻을 수 있을까요?  다음과 같은 정보를 얻을 수 있습니다.\n문제에 대한 좋은 설명.  문제에 대한 좋은 설명과 함께\n접근 방식에 대한 좋은 설명이 있을 것입니다.  무엇이 중요한지\n중요한 것에 대한 결정을 내렸을 것입니다.  여러분은 성찰을 했을 것입니다,\n그래서 반성적일 것입니다.  모든 것이 어떻게 접근하는지에 대한\n접근하는 방법에 대한 세부 사항을 갖게 될 것입니다.")]),e._v(" "),t("p",[e._v("그리고 주관적인 평가도 한눈에 파악할 수 있기 때문에\n당신의 일에 들어 와서 당신이 이것을했다면, 나는 빨리 볼 수 있습니다.\n좋은지 나쁜지 또는 장단점이 어디에 있다고 생각하는지 빠르게 파악할 수 있습니다.  그리고\n모든 주관성은 한 차원에 있습니다.  제가 동의하지 않으면\n당신의 시트를 가져다가 속여서 모든 색을 공백으로 바꿀 수 있습니다,\n그러면 주관성이 전혀 남지 않은 것을 다루게 될 것입니다.")]),e._v(" "),t("p",[e._v("All right, so what do you get when you do this?  You are going to have\na good description of the problem.  You are going to have a bunch of\napproaches with good descriptions of those.  You will have made\ndecisions about what matters.  You will have done that introspection,\nso it is reflective.  You will have details about how everything\napproaches it.")]),e._v(" "),t("p",[e._v("And you will have an at-a-glance subjective assessment, so if I am\ncoming into your thing and you have done this, I can quickly see what\nyou think is good or bad, or where you think the trade-offs lie.  And\nall the subjectivity is in one dimension.  If I do not agree with you,\nI can take your sheet, dupe it, and change all the colors to blank,\nand I will be dealing with something with no subjectivity left.")]),e._v(" "),t("p",[e._v("[Time 0:52:02]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: DM: Benefits\n\ncome back later/arrive late - (re)load context\n\nlive group thinking tool - make everything visible as text\n- vs voice + independent notes\n\npromotes shared understanding\n- call out ambiguity, inconsistency etc\n- raise and capture questions and ideas immediately\n\n_birthplace of abstraction_\n\n               _provocation for background thought_\n                        hammock, sleep\n           where new columns and best answers are born\n")])])]),t("p",[e._v("이렇게 하면 어떤 이점이 있을까요?")]),e._v(" "),t("p",[e._v("물론 나중에 다시 돌아와서 작업을 재개할 수 있습니다.\n다른 사람이 생각 과정에 동참할 수 있고, 늦게 도착하여\n따라잡을 수 있습니다.  한 명 이상이 이 작업을 하는 동안에는 모두가\n시트를 볼 수 있습니다.  Zoom에 접속해 각자 독립적으로 작업하는 것보다 훨씬 낫습니다.\n모든 사람이 각자 독립적으로 노트를 작성하고 그 후에\n그 메모를 조정하는 것보다 훨씬 낫습니다.  우리는 항상 시트를 만들어서\n얼굴에 대고 대화하면서 입력합니다.")]),e._v(" "),t("p",[e._v('이는 서로의 이해를 공유한다는 의미이기도 합니다.  여러분은\n"내 생각에는 당신이 제대로 말한 것 같지 않아요.  I\n그렇지 않다고 생각해요."라고 말할 수 있습니다.  좋은 일입니다.  이것이 바로\n소크라테스식 질문법입니다: 정말 그럴까요?')]),e._v(" "),t("p",[e._v("이런 식으로 잘라내고 기준을 고르는 과정에서 일어나는 또 다른 일은\n기준을 선택하는 것은 추상화를 시작한다는 것입니다.\n다섯 가지 선택지가 있었는데, 이제 두 가지 방법만 남았습니다.\n두 가지 방법뿐입니다.  여러분은 문제의 물리학을 배우고 있습니다.  거기\n이 두 가지 방법밖에 없습니다.  방법은 하나뿐입니다.\n모두가 같은 방식으로 합니다.  다른 방법이 있을 수도 있습니다.\n질문을 해보세요.")]),e._v(" "),t("p",[e._v("그리고 나중에 해제하고 싶은 특성을 찾고 있습니다,\n추상화할 수 있습니다.  그런 다음 이런 식으로 하면\n낮에 해먹이나 침대에 누워있을 때 새로운 아이디어를 얻을 수 있습니다.\n해먹이나 침대에 누워보세요.")]),e._v(" "),t("p",[e._v("All right, so what are the benefits of having done this?")]),e._v(" "),t("p",[e._v("Well certainly you get to come back later and resume your work.\nSomebody else can join you in the thought process, and arrive late and\ncatch up.  While more than one person is working on this, you all can\nbe looking at the sheet.  This is so much better than just gabbing on\nZoom and having everybody take independent notes, and then maybe\ntrying to reconcile those notes.  We "),t("em",[e._v("always")]),e._v(" make a sheet and stick\nit in our face and type into it while we are talking.")]),e._v(" "),t("p",[e._v('And it means that you are going to have shared understanding.  You are\ngoing to be able to say, "I do not think you are saying that right.  I\ndo not think that that is the case."  That is good.  That is the\nSocratic method, questioning: Is that really true?')]),e._v(" "),t("p",[e._v("The other thing I think happens as you have done this sort of cutting\nup, and pick the criteria, is: you are starting to do abstraction.\nYou are trying to see, well I had five possible choices, but only two\nways to do this.  You are learning the physics of the problem.  There\nis only two ways to do this.  There is only one way to do that.\nEverybody does it the same way.  Maybe there should be another way.\nYou could ask the question.")]),e._v(" "),t("p",[e._v("And you are finding characteristics that maybe you want to lift later,\nas abstraction.  And then this is the kind of thing, if you do this\nduring the day, I promise you, you are going to get new ideas when you\nhit the hammock or the bed.")]),e._v(" "),t("p",[e._v("[Time 0:53:18]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Phase: Design\n\n               _tactics, implementation plan_\n                  the blueprint-like design\n\n_What do you know?_ the problem and the direction we are taking to solve\n_What do you need to know?_\n- the possible implementation approaches\n- the best of these\n- what matters in deciding\n- how the users will use your solution\n")])])]),t("p",[e._v('다음 단계는 디자인입니다.  그리고 저는\n의도적으로 설계를 설계의 한 단계로 만든 이유는 이 설계는\n"그것을 하기 위한 계획을 표시"하기 때문입니다.  이것이 바로 전통적인 디자인 개념입니다.\n디자인입니다.  디자인이란 무엇인가에 대한 맥락을 넣는다는 것은...\n사실 여기서부터 시작할 수는 없습니다.  "저는 디자인을 하고 있습니다.\n이것이 제가 가장 먼저 할 일입니다.  먼저\n어떻게 무언가를 만들지 생각해야 합니다.  이제 보시다시피\n가치 있는 다른 모든 것들을 건너뛰게 될 것입니다.')]),e._v(" "),t("p",[e._v("이제 여러분은 실제로 다음과 같은 단계로 내려갈 것입니다.\n선택했습니다.  우리는 그것이 안경이라고 생각합니다.  이제 우리는\n가서 어떻게 만들지 알아내려고 노력할 것입니다.  아니면 우리가 알아냈을 수도 있습니다.\n우리는 손잡이가 필요하고 어디에 놓을 지 알아 내야합니다.\n그것.  그립감이 좋아야 할까요, 아니면 미끄러워야 할까요?  힌트: 그립감이 있어야 합니다.\n그립감이 있어야 합니다.  고정되어 있어야 하나요?  네, 고정되어 있어야 합니다.\n아시다시피  이런 거요.")]),e._v(" "),t("p",[e._v("알았어요  그래서 우리가 아는 게 뭐죠?  우린 문제와 방향을\n이미  그리고 당신은 이것을 봅니다.  당신은 힘을 얻고 있습니다.  당신은 얻고 있습니다\n속도.  자신감을 얻고 있습니다.  당신은 당신이 나아갈 방향을 알고 있습니다.\n방향을 알고 있습니다.")]),e._v(" "),t("p",[e._v('무엇을 알아야 할까요?  당신은 아마도 당신이 취할 접근 방식을 가지고있을 것입니다.\n하지만 정확히 어떻게 구현할지는 모릅니다.\n지금은 "API가 어떻게 생겼을까?\n어떻게 생겼을까?"  API를 만들기로 결정했습니다.  또는\n사람들이 직접 구현하는 데 사용할 수 있는 라이브러리를 만들기로 결정했습니다.  우리는\n자동화하지 않을 것입니다.  하지만 이제 여러분은\n"저 API는 어떻게 생겼을까?  서명은 어떻게 될까?\n어떻게 될까?"')]),e._v(" "),t("p",[e._v("똑같은 일이 일어날 것입니다.  바라건대, 여러분은\n하나 이상의 아이디어를 만들 것입니다.  그런 다음 가장 좋은 것을 선택하려고 할 것입니다.  여러분\n결정하기 위해 동일한 기술을 사용할 것입니다.  기준.")]),e._v(" "),t("p",[e._v('여기서 새롭고 다른 점은 이전과 다른 접근 방식입니다.\n사용자의 의도가 무엇인지 자세히 알고 싶었습니다.  이제 우리는\n구현 결정을 내릴 때 사용 사례 시트로 돌아가서\n사용 사례 시트로 돌아가서 "이것이 그들이 달성할 방법이다"라고 말할 수 있습니다.\n우리가 만들고자 하는 솔루션을 고려할 때 사용자의 의도를 달성하는 방법입니다."\n그리고 지금 우리가 선택하고 있는 구현 결정도 마찬가지입니다.')]),e._v(" "),t("p",[e._v('All right, and then the next phase of design is design.  And I\npurposely made design a phase of design because this design is about\n"mark out a plan for doing it".  This is the actual traditional notion\nof design.  By putting the context of what is design -- because you\nactually cannot start here.  You cannot just say, "I am doing design.\nThis is the first thing I am going to do.  I am going to start\nfiguring about how I am going to make something.  You see now, you\nwill have skipped over all this other stuff that is valuable.')]),e._v(" "),t("p",[e._v("So now you will actually be down to: all right, we have an approach\nchosen to take.  We think it is the eyeglass thing.  Now we are going\nto go and try to figure out how to make it.  Or maybe we figured out\nwe are going to want a knob, and we have to figure out where to put\nit.  And should it be grippy, or should it be slidy?  Hint: it should\nbe grippy.  Should it be detented or not.  Yes, it should be detented.\nYou know.  This kind of stuff.")]),e._v(" "),t("p",[e._v("All right.  So what do we know?  We know the problem and the direction\nalready.  And you see this.  You are gaining power.  You are gaining\nvelocity.  You are gaining confidence.  You know the direction you are\ngoing to take.")]),e._v(" "),t("p",[e._v('What do you need to know?  Well you you have got maybe an approach you\nare going to take, but not exactly how you are going to implement it.\nRight now is where you would be talking about like, "What is the API\ngoing to look like?"  We have decided to make an API.  Or, we have\ndecided to make a library for people to use to do it on their own.  We\nare not going to automate it.  But now you would be talking about\nlike, "What is that API going to look like?  What is the signatures\ngoing to be?"')]),e._v(" "),t("p",[e._v("The same thing is going to happen.  Hopefully, you are going to create\nmore than one idea.  Then you are going to try to pick the best.  You\nare going to use the same techniques to decide.  Criteria.")]),e._v(" "),t("p",[e._v('The other thing that is new here and different is before with approach\nwe wanted to know in detail what are the user\'s intentions.  Now we\nget to talk about: as we make implementation decisions, we can go back\nto that use cases sheet and say, "this is how they will accomplish\ntheir intention, given the solution that we are intending to make."\nAnd the implementation decisions we are choosing right now.')]),e._v(" "),t("p",[e._v("[Time 0:55:25]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Phase: Design (cont.)\n\n_Where are you at?_ Have use cases and strategy/direction DM\n_Where are you going?_\n\n  implementation approach DM(s)\n\n  design (plan) diagrams\n\n  implementation decisions\n\n  add detail to Approach section of top story\n\n  fill in 'How' column in Use Cases\n\n    how user can accomplish using feature/API etc\n\n    _possible scope adjustment or backtracking if impl poses new challenges_\n")])])]),t("p",[e._v("그래서 무엇을 얻었나요?  사용 사례와 이 DM이 있습니다.  당신\n더 많은 DMS를 받게 될 것입니다.  15분 정도의 아주 가벼운\n운동이 될 수 있습니다.  우리는 이 선택을 해야 합니다.  우리는 뭔가를해야합니다\n여기.  우리의 선택은 무엇일까요?  바로 '붐'입니다.  이것들의 장단점은 무엇일까요?\n이것들?  이것, 저것, 또는 다른 것.  매우 가벼울 수 있습니다.  저는\n모든 결정에 대한 고통에 대해 이야기하는 것이 아닙니다.  제가 말하는 것은\n가능한 한 자주 배려하려고 노력하는 것입니다.")]),e._v(" "),t("p",[e._v("이럴 때 다이어그램을 작성할 수 있습니다.  여러분은 확실히\n이러한 DMS를 수행한 결과, 구현을 하게 될 것입니다.\n결정을 내리게 될 것입니다.  여러분은 스토리의 그 부분으로 돌아가게 될 것입니다.\n접근 방식이며, 지금 당장 방향이 있는 부분으로 돌아가서\n세부 사항을 추가할 것입니다.")]),e._v(" "),t("p",[e._v("다른 얘기를 기억하실지 모르겠지만, 저희는\n이 문제에 대해 어떻게 할 것인가?  우리는\n이 세 가지 API가 있습니다.  그리고 여러분은 이 작업을 수행할 수 있을 것입니다.")]),e._v(" "),t("p",[e._v('그런 다음 사용 사례로 돌아가서 "어떻게?" 열을 채우세요.\n"어떻게?" 열을 채우세요.  제가 전에 말씀드린 적이 있습니다.\n구현 세부 사항을 수행하는 과정에서 실제로 돌아가서\n실제로 돌아가서 범위를 변경해야 할 수도 있습니다.  우리는\n이 작업을 수행 할 것이고, 우리는 그것을 구현할 방법을 찾지 못했습니다.\n구현할 방법을 찾지 못했습니다.\n구현할 방법을 찾지 못했습니다.  그리고 우리는 그런 위험을 감수하고 싶지 않았습니다.\n위험을 감수하고 싶지 않습니다.  그리고 백업할 것입니다.')]),e._v(" "),t("p",[e._v("So what do you got?  You have the use cases and you have this DM.  You\nare going to have more DMS.  These can be very light 15-minute\nexercises.  We need to make this choice.  We need to do something\nhere.  What are our choices?  Boom.  What is the trade-offs of these\nthings?  This, that, or the other.  It can be very lightweight.  I am\nnot talking about suffering over every decision.  I am talking about\njust trying to be considerate, as often as you can.")]),e._v(" "),t("p",[e._v("This is when you may do diagramming.  You are certainly going to, as\nan outcome of doing these DMS, you are going to make implementation\ndecisions.  You are going to go back to that part of the story which\nis the approach, and which has the direction in it right now, and you\nare going to add the details.")]),e._v(" "),t("p",[e._v("I do not know if you remember back to the other thing, but we said\nlike what are we going to do about this problem?  We are going to have\nthese three APIs.  And you are going to be able to do this.")]),e._v(" "),t("p",[e._v('And then you are going to go back to your use cases and fill in the\n"How?"  column.  It is certainly possible that in doing -- I talked\nabout this before -- in doing the implementation details, you may\nactually need to go back and alter your scope.  We thought we were\ngoing to do this, and we did not find a way to implement it that was\nnot going to be too much work, or too possibly risky in altering code\nthat we already had.  And we do not want to take on the risk of that\nmuch change.  And then you are going to back up.')]),e._v(" "),t("p",[e._v("[Time 0:56:48]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Example: Impl DM\n")])])]),t("p",[t("img",{attrs:{src:"DesignInPractice/example-impl-DM.png",alt:"0:56:48 Example: Impl DM"}})]),e._v(" "),t("p",[e._v("이것은 우리가 이미 배포한 것에 대한 실제 구현 DM입니다.\n이 문제가 있었습니다.  클로저를 처음 접하는 사람들은 자바를 모릅니다.  그들은\n자바 수학이 있다는 것을 모르고, 어떻게 해야 하는지 모릅니다.\n코사인.  그리고 그것은 사람들에게 바로 이 장애물입니다.")]),e._v(" "),t("p",[e._v('그러나 그것에 대해 할 수있는 많은 다른 것들이 있습니다.  당신\n아무것도 하지 않고 "좋아, 우리가 더 나은 방법을 알려줄게.\n더 나은 방법을 알려드리겠습니다."라고 말할 수도 있습니다.  그래서 우리는 이러한 특성을 가지고 있습니다.  같은\n동일합니다.  정적 임포트를 할 수 있습니다.  정적 임포트를 할 수도 있고\n생성하는 프로그램을 만들 수도 있습니다.  아니면\n직접 코드를 작성하고 장단점을 살펴봤습니다.  그래서 저희는\n그렇게 했습니다.')]),e._v(" "),t("p",[e._v("This is a real implementation DM for something we did already ship.\nWe had this problem.  Newcomers to Clojure do not know Java.  They do\nnot know there is a Java math thing, and they do not know how to do\ncosine.  And it is just this hurdle for people.")]),e._v(" "),t("p",[e._v('But there is a lot of different things you could do about it.  You\ncould do nothing, and say, "All right, we will give you a better way\nto find the Java doc."  So we have these characteristics.  The same\nthing.  We could do static imports.  We could have a program that gens\nthe thing from the Java, which is what we ended up doing.  Or we could\nhand code and we were looking at these trade-offs.  So that is how we\ndo that.')]),e._v(" "),t("p",[e._v("[Time 0:57:35]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Technique: Diagrams\n\n              _details out of scope for this talk_\n\nimportant complement for tables and prose, better for:\n\n  architecture\n\n  flows\n\n  relationships\n\n  representations/layouts\n\n  UI\n\n        _diagram your problems, not just your solutions_\n")])])]),t("p",[e._v("다이어그램은 범위를 벗어납니다.  다시 한 번 말씀드리지만\n이것.  하지만 산문과 표가 부적절한 경우\n부적절합니다.  흐름에 대해 이야기할 때 많은 경우,\n사물 간의 관계, 시각적 표현이\n중요하죠.  그래서 그렇게 하고 싶겠죠.")]),e._v(" "),t("p",[e._v("여기서 한 가지 팁을 드리자면, 이것은 단순히 무엇을 하려는지\n무엇을 할 것인지 다이어그램화하라는 것입니다.  무엇이\n잘못된.  일이 어떻게 흘러갈지 모른다면.  다음과 같은 문제가 있다면\n이 문제가 있습니다: 나는 여기서만 이것을 알고 있으며 우리의 의도에서 우리는 필요합니다.\n저쪽을 알기 위해서는 다음과 같은 다이어그램을 그려보세요: 나는\n물음표를 표시하는 다이어그램을 그려보세요.  왜냐하면 우리는 이 지식이\n이 지식이 여기에 있거나 이 데이터베이스에 있을 것이라고 가정하기 때문입니다.\n어떻게 거기에 도달할지 아직 결정하지 않았기 때문입니다.  따라서 해결책을 다이어그램화하기 전에\n해결책을 다이어그램으로 그리는 것은 좋은 기법입니다.")]),e._v(" "),t("p",[e._v("Diagrams are out of scope.  Again, I could talk for an hour about\nthis.  But you you want to use this when prose and tables are\ninadequate.  A lot of times when you are talking about flow,\nrelationships between things, visual representations are super\nimportant.  So you want to do that.")]),e._v(" "),t("p",[e._v("The one tip I would give you here is: this is not just about\ndiagramming what you are going to do.  You should diagram what is\nwrong.  If you do not know how things are going to flow.  If you have\nthis problem of: I only know this here, and in our intention we need\nto know it over there, well, draw the diagram that shows: I have a\nquestion mark about how this gets over there.  Because we presume that\nthis knowledge would be here, or would be in this database, and we\nhave not decided yet how it gets there.  So diagramming your problem\nbefore you diagram your solution is a good technique.")]),e._v(" "),t("p",[e._v("[Time 0:58:24]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: Phase: Dev\n\n                            build it\n\nYou _understand_ why you are making the thing - solving this problem\nYou _know how_ to make it - few or no unknowns\nYou are _confident it will work_\n- lots of supportive material\n- keeps you on track\n- facilitates adding others to team\n\nthe solutions will be _smaller_ and _more general_ due to having designed it\n\nHave at, with you dev toolkit and techniques\n\n  but don't build something on the same day you think of it\n")])])]),t("p",[e._v("그리고 마지막으로, 마침내 모든 디자인을 완료했습니다.  당신은 이것을 가지고 있습니다\n문제가 있는 최상위 스토리가 있습니다.  컨텍스트는 무엇인가요?  무엇이\n실제로 원인은 무엇인가요?  취할 전략은 무엇인가요?  무엇을\n구현 선택의 세부 사항은 무엇인가요?\n왜 일을 하고 있는지 알고 있습니다.  어떻게 구축할지 알고 있습니다.\n구축할지 알고 있습니다.  구축하려는 것이 효과가 있을 거라는 확신이\n성공할 것이라는 확신이 있어야 합니다.  많은 지원 자료가 있습니다.\n자료가 많습니다.")]),e._v(" "),t("p",[e._v("이것이 도움이 될 것입니다.  여러분이 그것을 하려고 할 때, 여러분은\n기억할 필요가 없습니다.  이전에 했던 작업을 보면 됩니다.  만약 당신이\n팀을 성장시키거나 다른 사람에게 넘겨야 한다면\n그들에게 줄 것이 많습니다.")]),e._v(" "),t("p",[e._v('그리고 이 강연에서 제가 주장하고자 하는 것은 바로 이것입니다: 저는\n디자인에 대해 이렇게 엄격한 접근 방식을 취하면\n디자인, 결국 당신이 만들 물건은 더 작고 더 많은\n일반적입니다.  많은 사람들이 "클로저의 이런 점이 마음에 듭니다.  우리는\n클로저의 이런 점이 좋아요."  그리고 그것은 이런 종류의 것에서 비롯됩니다.  It\n계속 잘라내고 잘라내다 보면\n결국에는 작은 것들만 남게 되는데, 디자인을 했기 때문에\n디자인이 완성되는 거죠.')]),e._v(" "),t("p",[e._v("그래서 개발 방법에 대한 이야기는 무수히 많습니다.  제 생각에는\n사람들은 CI에 대한 전략을 가지고 있습니다.  이 이야기는 그런 이야기가 아닙니다.  제가 드리고 싶은\n한 가지 팁을 드리자면, 생각한 것과 같은 날에\n만들지 마세요.  왜 안 될까요?")]),e._v(" "),t("p",[e._v('당신은 그것에 대해 잠을 자지 않았습니다.  장담하건대, 이런 종류의 작업을 낮에 하고\n낮에 코딩을 시작하고 오후에 코딩을 시작하면 다음날 아침에\n다음날 아침에는 다음과 같이 될 것입니다: "저거?  아니, 하지 말았어야 했는데\n그거."  그러니 신경 쓰지 마세요.  커피를 마시러 나가거나\n다른 것에 대해 이야기하십시오.  하지만 하루만 기다려주세요.')]),e._v(" "),t("p",[e._v("And finally, finally you have done all this design.  You have got this\ntop level story that has what is wrong.  What is the context?  What is\nactually the cause?  What is the strategy you are going to take?  What\nare the details of the implementation choices you are going to make?\nYou know why you are doing things.  You know how you are going to\nbuild it.  You should have a very high confidence that what you are\ngoing to build is going to work.  You have a ton of supportive\nmaterial.")]),e._v(" "),t("p",[e._v("This will help you do it.  When you are trying to do it, you do not\nhave to remember.  You will look at the work you did before.  If you\nneed to grow the team or hand it off to someone else, you have a lot\nof stuff to give them.")]),e._v(" "),t("p",[e._v('And then the contention I will make in this talk is that: I believe\nvery strongly that if you take this kind of rigorous approach to doing\ndesign, the thing you will make in the end will be smaller and more\ngeneral.  A lot of times people say, "We like this about Clojure.  We\nlike that about Clojure."  And it comes from this kind of a thing.  It\nis just like you keep cutting it down and cutting it across, and you\nend up with small things that are more composable and more general due\nto having done the design.')]),e._v(" "),t("p",[e._v("So obviously there is a million talks about how to do dev.  I think\npeople have strategies for CI whatever.  This is not that talk.  The\none tip I would give you is: do not build something on the same day\nyou think of it.  Why not?")]),e._v(" "),t("p",[e._v('You have not slept on it.  I promise you, if you do this kind of work\nduring the day, and you start coding in the afternoon, the next\nmorning you are going to be like: "That?  No.  We should not have done\nthat."  So just do not even bother.  Go out for coffee, or talk about\nsomething else.  But give it a day.')]),e._v(" "),t("p",[e._v("[Time 1:00:07]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('slide title: Thanks!\n\nDan (for all the notes), Stu, Alex and my other Socratic victims\n[strikethrough on "victims"] friends on the Clojure and Datomic teams.\n')])])]),t("p",[e._v("감사합니다.  특히 댄에게 감사하고 싶습니다.  그는 여기 없지만\n저를 따라다니며 디자인에 대한 많은 멘토링을 해주시고\n많은 메모를 해주셔서 이 강연을 만드는 데 정말 큰 도움이 되었습니다.  그리고 스튜와\nAlex, 그리고 Clojure 및 Datomic 팀에서 함께 일하는 모든 분들께도 감사드립니다.\n우리는 이 일을 합니다.  저는 이것이 어렵다고 생각하고, 배우기도 어렵다고 생각합니다.\n배우기도 어렵죠.  하지만 여러분은 할 수 있다고 생각합니다.  배울 수 있습니다.  그리고\n연습하면 ...")]),e._v(" "),t("p",[e._v("So, thanks.  I want to thank especially Dan.  He is not here, but he\nhas been tracking me, doing a lot of mentorship of design and taking a\nlot of notes, which really helped me build this talk.  And Stu and\nAlex and all the people I work with on the Clojure and Datomic teams.\nWe do this.  I think it is hard to do, and I think it is hard to\nlearn.  But I think you can do it.  You can learn it.  And with\npractice ...")]),e._v(" "),t("p",[e._v("[Time 1:00:45]")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("slide title: \n\nInspiration exists, but it has to find you working\n\n                                 -- Pablo Picasso\n")])])]),t("p",[e._v("... 많은 것을 성취할 수 있습니다.  정말 감사합니다.")]),e._v(" "),t("p",[e._v("... you can accomplish things.  So thank you very much.")]),e._v(" "),t("p",[e._v("[Applause]")])])}),[],!1,null,null,null);t.default=a.exports}}]);